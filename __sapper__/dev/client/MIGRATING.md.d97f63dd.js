import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, p as element, t as text, o as space, x as claim_element, y as children, z as claim_text, u as detach_dev, w as claim_space, E as attr_dev, D as add_location, F as insert_dev, G as append_dev, O as noop, q as create_component, r as query_selector_all, A as claim_component, H as mount_component, J as transition_in, K as transition_out, M as destroy_component } from './client.ec94238b.js';

/* MIGRATING.md generated by Svelte v3.37.0 */

const file$1 = "MIGRATING.md";

function create_fragment$1(ctx) {
	let h10;
	let t0;
	let t1;
	let p0;
	let t2;
	let t3;
	let h11;
	let t4;
	let t5;
	let ul1;
	let li1;
	let t6;
	let code0;
	let t7;
	let t8;
	let ul0;
	let li0;
	let t9;
	let t10;
	let h12;
	let t11;
	let t12;
	let h20;
	let t13;
	let t14;
	let p1;
	let t15;
	let t16;
	let p2;
	let t17;
	let a0;
	let t18;
	let t19;
	let t20;
	let h13;
	let t21;
	let t22;
	let p3;
	let t23;
	let a1;
	let t24;
	let t25;
	let p4;
	let t26;
	let t27;
	let h21;
	let t28;
	let t29;
	let h30;
	let t30;
	let t31;
	let ul2;
	let li2;
	let t32;
	let t33;
	let li3;
	let t34;
	let t35;
	let h22;
	let t36;
	let t37;
	let h31;
	let t38;
	let t39;
	let ul8;
	let li5;
	let t40;
	let ul3;
	let li4;
	let t41;
	let t42;
	let li8;
	let t43;
	let ul4;
	let li6;
	let t44;
	let code1;
	let t45;
	let t46;
	let t47;
	let li7;
	let t48;
	let code2;
	let t49;
	let t50;
	let t51;
	let li11;
	let t52;
	let ul5;
	let li9;
	let t53;
	let code3;
	let t54;
	let t55;
	let t56;
	let li10;
	let t57;
	let code4;
	let t58;
	let t59;
	let t60;
	let li13;
	let t61;
	let ul6;
	let li12;
	let t62;
	let code5;
	let t63;
	let t64;
	let t65;
	let li15;
	let t66;
	let ul7;
	let li14;
	let t67;
	let code6;
	let t68;
	let t69;
	let code7;
	let t70;
	let t71;
	let t72;
	let h14;
	let t73;
	let t74;
	let p5;
	let t75;
	let code8;
	let t76;
	let t77;
	let t78;
	let pre;

	let raw_value = `<code class="language-sh">npm un -D node-sass
npm i -D sass</code>` + "";

	let t79;
	let p6;
	let t80;
	let a2;
	let t81;
	let t82;
	let p7;
	let t83;
	let a3;
	let t84;
	let t85;
	let t86;
	let h23;
	let t87;
	let t88;
	let h32;
	let t89;
	let t90;
	let ul9;
	let li16;
	let t91;
	let t92;
	let li17;
	let t93;
	let a4;
	let t94;
	let t95;
	let t96;
	let h33;
	let t97;
	let t98;
	let ul23;
	let li23;
	let t99;
	let ul10;
	let li18;
	let t100;
	let code9;
	let t101;
	let t102;
	let code10;
	let t103;
	let t104;
	let t105;
	let li19;
	let t106;
	let t107;
	let li20;
	let t108;
	let code11;
	let t109;
	let t110;
	let code12;
	let t111;
	let t112;
	let code13;
	let t113;
	let t114;
	let t115;
	let li21;
	let t116;
	let code14;
	let t117;
	let t118;
	let t119;
	let li22;
	let t120;
	let code15;
	let t121;
	let t122;
	let t123;
	let li25;
	let t124;
	let ul11;
	let li24;
	let code16;
	let t125;
	let t126;
	let t127;
	let li29;
	let t128;
	let ul12;
	let li26;
	let t129;
	let code17;
	let t130;
	let t131;
	let code18;
	let t132;
	let t133;
	let code19;
	let t134;
	let t135;
	let code20;
	let t136;
	let t137;
	let code21;
	let t138;
	let t139;
	let t140;
	let li27;
	let t141;
	let code22;
	let t142;
	let t143;
	let code23;
	let t144;
	let t145;
	let code24;
	let t146;
	let t147;
	let t148;
	let li28;
	let t149;
	let a5;
	let t150;
	let t151;
	let t152;
	let li31;
	let t153;
	let ul13;
	let li30;
	let t154;
	let code25;
	let t155;
	let t156;
	let t157;
	let li33;
	let t158;
	let ul14;
	let li32;
	let t159;
	let code26;
	let t160;
	let t161;
	let t162;
	let li35;
	let t163;
	let ul15;
	let li34;
	let code27;
	let t164;
	let t165;
	let code28;
	let t166;
	let t167;
	let code29;
	let t168;
	let t169;
	let code30;
	let t170;
	let t171;
	let t172;
	let li37;
	let t173;
	let ul16;
	let li36;
	let t174;
	let code31;
	let t175;
	let t176;
	let code32;
	let t177;
	let t178;
	let code33;
	let t179;
	let t180;
	let t181;
	let li39;
	let t182;
	let ul17;
	let li38;
	let a6;
	let t183;
	let t184;
	let t185;
	let li45;
	let t186;
	let ul18;
	let li40;
	let t187;
	let t188;
	let li41;
	let t189;
	let code34;
	let t190;
	let t191;
	let t192;
	let li42;
	let t193;
	let code35;
	let t194;
	let t195;
	let code36;
	let t196;
	let t197;
	let t198;
	let li43;
	let t199;
	let code37;
	let t200;
	let t201;
	let t202;
	let li44;
	let t203;
	let code38;
	let t204;
	let t205;
	let code39;
	let t206;
	let t207;
	let t208;
	let li48;
	let t209;
	let ul19;
	let li46;
	let code40;
	let t210;
	let t211;
	let code41;
	let t212;
	let t213;
	let t214;
	let li47;
	let code42;
	let t215;
	let t216;
	let t217;
	let li50;
	let t218;
	let ul20;
	let li49;
	let t219;
	let code43;
	let t220;
	let t221;
	let code44;
	let t222;
	let t223;
	let t224;
	let li52;
	let t225;
	let ul21;
	let li51;
	let t226;
	let code45;
	let t227;
	let t228;
	let code46;
	let t229;
	let t230;
	let code47;
	let t231;
	let t232;
	let t233;
	let li60;
	let t234;
	let ul22;
	let li53;
	let t235;
	let t236;
	let li54;
	let t237;
	let t238;
	let li55;
	let t239;
	let code48;
	let t240;
	let t241;
	let t242;
	let li56;
	let t243;
	let code49;
	let t244;
	let t245;
	let code50;
	let t246;
	let t247;
	let code51;
	let t248;
	let t249;
	let code52;
	let t250;
	let t251;
	let t252;
	let li57;
	let t253;
	let code53;
	let t254;
	let t255;
	let code54;
	let t256;
	let t257;
	let t258;
	let li58;
	let t259;
	let code55;
	let t260;
	let t261;
	let code56;
	let t262;
	let t263;
	let t264;
	let li59;
	let t265;
	let code57;
	let t266;
	let t267;
	let code58;
	let t268;
	let t269;
	let code59;
	let t270;
	let t271;
	let code60;
	let t272;
	let t273;
	let t274;
	let h24;
	let t275;
	let t276;
	let h34;
	let t277;
	let t278;
	let ul26;
	let li62;
	let t279;
	let ul24;
	let li61;
	let t280;
	let code61;
	let t281;
	let t282;
	let t283;
	let li64;
	let t284;
	let ul25;
	let li63;
	let t285;
	let code62;
	let t286;
	let t287;
	let t288;
	let h35;
	let t289;
	let t290;
	let ul27;
	let li65;
	let t291;
	let code63;
	let t292;
	let t293;
	let t294;
	let li66;
	let t295;
	let strong;
	let t296;
	let t297;
	let t298;
	let li67;
	let t299;
	let code64;
	let t300;
	let t301;
	let t302;
	let p8;
	let t303;
	let t304;
	let ul28;
	let li68;
	let t305;
	let t306;
	let li69;
	let t307;
	let t308;
	let li70;
	let t309;
	let t310;
	let li71;
	let t311;
	let t312;
	let li72;
	let t313;
	let t314;
	let li73;
	let t315;
	let t316;
	let p9;
	let t317;
	let t318;
	let ul44;
	let li76;
	let t319;
	let ul29;
	let li74;
	let t320;
	let code65;
	let t321;
	let t322;
	let t323;
	let li75;
	let t324;
	let code66;
	let t325;
	let t326;
	let t327;
	let li78;
	let t328;
	let ul30;
	let li77;
	let t329;
	let code67;
	let t330;
	let t331;
	let t332;
	let li85;
	let t333;
	let ul31;
	let li79;
	let t334;
	let code68;
	let t335;
	let t336;
	let t337;
	let li80;
	let t338;
	let code69;
	let t339;
	let t340;
	let t341;
	let li81;
	let t342;
	let code70;
	let t343;
	let t344;
	let t345;
	let li82;
	let t346;
	let t347;
	let li83;
	let t348;
	let t349;
	let li84;
	let t350;
	let t351;
	let li87;
	let t352;
	let ul32;
	let li86;
	let t353;
	let code71;
	let t354;
	let t355;
	let t356;
	let li90;
	let t357;
	let ul33;
	let li88;
	let t358;
	let code72;
	let t359;
	let t360;
	let t361;
	let li89;
	let t362;
	let code73;
	let t363;
	let t364;
	let t365;
	let li92;
	let t366;
	let ul34;
	let li91;
	let t367;
	let code74;
	let t368;
	let t369;
	let t370;
	let li94;
	let t371;
	let ul35;
	let li93;
	let t372;
	let code75;
	let t373;
	let t374;
	let t375;
	let li96;
	let t376;
	let ul36;
	let li95;
	let t377;
	let code76;
	let t378;
	let t379;
	let code77;
	let t380;
	let t381;
	let t382;
	let li100;
	let t383;
	let ul37;
	let li97;
	let t384;
	let code78;
	let t385;
	let t386;
	let t387;
	let li98;
	let t388;
	let code79;
	let t389;
	let t390;
	let t391;
	let li99;
	let t392;
	let code80;
	let t393;
	let t394;
	let t395;
	let li104;
	let t396;
	let ul38;
	let li101;
	let t397;
	let code81;
	let t398;
	let t399;
	let t400;
	let li102;
	let t401;
	let code82;
	let t402;
	let t403;
	let t404;
	let li103;
	let t405;
	let code83;
	let t406;
	let t407;
	let t408;
	let li107;
	let t409;
	let ul39;
	let li105;
	let t410;
	let code84;
	let t411;
	let t412;
	let t413;
	let li106;
	let t414;
	let code85;
	let t415;
	let t416;
	let t417;
	let li110;
	let t418;
	let ul40;
	let li108;
	let t419;
	let code86;
	let t420;
	let t421;
	let code87;
	let t422;
	let t423;
	let code88;
	let t424;
	let t425;
	let t426;
	let li109;
	let t427;
	let code89;
	let t428;
	let t429;
	let t430;
	let li112;
	let t431;
	let ul41;
	let li111;
	let t432;
	let code90;
	let t433;
	let t434;
	let t435;
	let li117;
	let t436;
	let ul42;
	let li113;
	let t437;
	let code91;
	let t438;
	let t439;
	let code92;
	let t440;
	let t441;
	let t442;
	let li114;
	let t443;
	let code93;
	let t444;
	let t445;
	let t446;
	let li115;
	let t447;
	let code94;
	let t448;
	let t449;
	let t450;
	let li116;
	let t451;
	let code95;
	let t452;
	let t453;
	let t454;
	let li119;
	let t455;
	let ul43;
	let li118;
	let t456;
	let code96;
	let t457;
	let t458;
	let t459;
	let p10;
	let t460;
	let t461;
	let h15;
	let t462;
	let t463;
	let p11;
	let t464;
	let a7;
	let t465;
	let t466;
	let ul49;
	let li124;
	let t467;
	let ul45;
	let li120;
	let t468;
	let t469;
	let li121;
	let t470;
	let t471;
	let li122;
	let t472;
	let code97;
	let t473;
	let t474;
	let t475;
	let li123;
	let t476;
	let t477;
	let li126;
	let t478;
	let ul46;
	let li125;
	let t479;
	let t480;
	let li130;
	let t481;
	let ul47;
	let li127;
	let code98;
	let t482;
	let t483;
	let t484;
	let li128;
	let code99;
	let t485;
	let t486;
	let t487;
	let li129;
	let t488;
	let code100;
	let t489;
	let t490;
	let code101;
	let t491;
	let t492;
	let t493;
	let li132;
	let t494;
	let ul48;
	let li131;
	let t495;
	let code102;
	let t496;
	let t497;

	const block = {
		c: function create() {
			h10 = element("h1");
			t0 = text("Migrating to Newer SMUI Versions");
			t1 = space();
			p0 = element("p");
			t2 = text("This doc contains information that will help you migrate your code from an older version of SMUI to a newer one. Things that you will need to change in your existing code will be written here. It would also be helpful to check the MDC changelog if the upstream MDC versions has changed between SMUI versions.");
			t3 = space();
			h11 = element("h1");
			t4 = text("SMUI 4.0 -> SMUI 4.1");
			t5 = space();
			ul1 = element("ul");
			li1 = element("li");
			t6 = text("Event modifiers have changed to use ”$” instead of ”:” (");
			code0 = element("code");
			t7 = text("on:click$capture={handler}");
			t8 = text("), so that all events, even MDC events, can be bound with modifiers.");
			ul0 = element("ul");
			li0 = element("li");
			t9 = text("The old ”:” syntax will still work, it will just give a warning in the console.");
			t10 = space();
			h12 = element("h1");
			t11 = text("SMUI 3 -> SMUI 4");
			t12 = space();
			h20 = element("h2");
			t13 = text("Breaking Changes");
			t14 = space();
			p1 = element("p");
			t15 = text("Components no longer import styles from their “index.js” files. If you were using “/bare” before, you don’t need to anymore. If you were relying on styles being imported, you now need to use the “/styled” endpoint for components.");
			t16 = space();
			p2 = element("p");
			t17 = text("Check out the new ");
			a0 = element("a");
			t18 = text("smui-theme");
			t19 = text(" package. It can help you with your themes.");
			t20 = space();
			h13 = element("h1");
			t21 = text("SMUI 3.0 -> SMUI 3.1");
			t22 = space();
			p3 = element("p");
			t23 = text("SMUI 3.1 migrated to upstream MDC 11.0 from 10.0:\n");
			a1 = element("a");
			t24 = text("https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#1100-2021-04-15");
			t25 = space();
			p4 = element("p");
			t26 = text("You should update your MDC dependencies to 11.0 as well.");
			t27 = space();
			h21 = element("h2");
			t28 = text("Breaking Changes");
			t29 = space();
			h30 = element("h3");
			t30 = text("Theming, Sass");
			t31 = space();
			ul2 = element("ul");
			li2 = element("li");
			t32 = text("MDC-Web chips trailing actions class changed.");
			t33 = space();
			li3 = element("li");
			t34 = text("MDC-Web list classes changed.");
			t35 = space();
			h22 = element("h2");
			t36 = text("New Features");
			t37 = space();
			h31 = element("h3");
			t38 = text("Compoennts");
			t39 = space();
			ul8 = element("ul");
			li5 = element("li");
			t40 = text("Banner");
			ul3 = element("ul");
			li4 = element("li");
			t41 = text("Add focus trap on the banner.");
			t42 = space();
			li8 = element("li");
			t43 = text("Dialog");
			ul4 = element("ul");
			li6 = element("li");
			t44 = text("New ");
			code1 = element("code");
			t45 = text("fullscreen");
			t46 = text(" prop.");
			t47 = space();
			li7 = element("li");
			t48 = text("New ");
			code2 = element("code");
			t49 = text("over");
			t50 = text(" slot.");
			t51 = space();
			li11 = element("li");
			t52 = text("Menu Surface");
			ul5 = element("ul");
			li9 = element("li");
			t53 = text("New ");
			code3 = element("code");
			t54 = text("maxHeight");
			t55 = text(" prop.");
			t56 = space();
			li10 = element("li");
			t57 = text("New ");
			code4 = element("code");
			t58 = text("horizontallyCenteredOnViewport");
			t59 = text(" prop.");
			t60 = space();
			li13 = element("li");
			t61 = text("Slider");
			ul6 = element("ul");
			li12 = element("li");
			t62 = text("Rounds values to correct decimal places based on ");
			code5 = element("code");
			t63 = text("step");
			t64 = text(" prop.");
			t65 = space();
			li15 = element("li");
			t66 = text("Tooltip");
			ul7 = element("ul");
			li14 = element("li");
			t67 = text("New ");
			code6 = element("code");
			t68 = text("attachScrollHandler");
			t69 = text(" and ");
			code7 = element("code");
			t70 = text("removeScrollHandler");
			t71 = text(" functions for adding additional scrollable elements to handle. Both accept a function.");
			t72 = space();
			h14 = element("h1");
			t73 = text("SMUI 2 -> SMUI 3");
			t74 = space();
			p5 = element("p");
			t75 = text("You will need to migrate to Dart Sass. ");
			code8 = element("code");
			t76 = text("node-sass");
			t77 = text(" is no longer supported, as it is deprecated and too old now.");
			t78 = space();
			pre = element("pre");
			t79 = space();
			p6 = element("p");
			t80 = text("SMUI 3 migrated to upstream MDC 10.0 from 4.0:\n");
			a2 = element("a");
			t81 = text("https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#1000-2021-02-05");
			t82 = space();
			p7 = element("p");
			t83 = text("There are ");
			a3 = element("a");
			t84 = text("newly updated instructiong");
			t85 = text(" for using SMUI in Sapper.");
			t86 = space();
			h23 = element("h2");
			t87 = text("Breaking Changes");
			t88 = space();
			h32 = element("h3");
			t89 = text("Theming, Sass");
			t90 = space();
			ul9 = element("ul");
			li16 = element("li");
			t91 = text("MDC-Web migrated to the “@use” syntax, so mixins, functions, and variables are namespaced by the “@use” statement now instead of a prefix.");
			t92 = space();
			li17 = element("li");
			t93 = text("Theming has changed, so you’ll need to update your ”_smui-theme.scss” file. Follow ");
			a4 = element("a");
			t94 = text("this guide");
			t95 = text(".");
			t96 = space();
			h33 = element("h3");
			t97 = text("Components");
			t98 = space();
			ul23 = element("ul");
			li23 = element("li");
			t99 = text("Chips");
			ul10 = element("ul");
			li18 = element("li");
			t100 = text("You now need to use ");
			code9 = element("code");
			t101 = text("let:chip");
			t102 = text(" on the set and pass it to the chip with ");
			code10 = element("code");
			t103 = text("{chip}");
			t104 = text(".");
			t105 = space();
			li19 = element("li");
			t106 = text("Chips now export LeadingIcon, TrailingIcon, and TrailingAction, instead of Icon.");
			t107 = space();
			li20 = element("li");
			t108 = text("Removed ");
			code11 = element("code");
			t109 = text("selected");
			t110 = text(" prop on Chip. ");
			code12 = element("code");
			t111 = text("selected");
			t112 = text(" prop on Chips is now the only way to set the selected chip(s), and it/they should be identical to one/some of the entries in ");
			code13 = element("code");
			t113 = text("chips");
			t114 = text(" (pass objects by reference).");
			t115 = space();
			li21 = element("li");
			t116 = text("Don’t provide any ");
			code14 = element("code");
			t117 = text("tabindex");
			t118 = text(" props to any of the Chips, Texts, or the Set. They will manage their own tabindex.");
			t119 = space();
			li22 = element("li");
			t120 = text("On TrailingAction, use ");
			code15 = element("code");
			t121 = text("icon$class");
			t122 = text(" to add classes to the icon element.");
			t123 = space();
			li25 = element("li");
			t124 = text("Data Table");
			ul11 = element("ul");
			li24 = element("li");
			code16 = element("code");
			t125 = text("numeric");
			t126 = text(" prop on Cell should now also be set on Head Cells.");
			t127 = space();
			li29 = element("li");
			t128 = text("Dialog");
			ul12 = element("ul");
			li26 = element("li");
			t129 = text("Open state is now controled by an ");
			code17 = element("code");
			t130 = text("open");
			t131 = text(" prop, instead of ");
			code18 = element("code");
			t132 = text("open");
			t133 = text(" and ");
			code19 = element("code");
			t134 = text("close");
			t135 = text(" functions. There are also ");
			code20 = element("code");
			t136 = text("isOpen");
			t137 = text(" and ");
			code21 = element("code");
			t138 = text("setOpen");
			t139 = text(" functions.");
			t140 = space();
			li27 = element("li");
			t141 = text("Lists should now be placed below ");
			code22 = element("code");
			t142 = text("Content");
			t143 = text(" element, rather than being the ");
			code23 = element("code");
			t144 = text("Content");
			t145 = text(" component. For selection from a list, use the new ");
			code24 = element("code");
			t146 = text("selection");
			t147 = text(" prop on the dialog.");
			t148 = space();
			li28 = element("li");
			t149 = text("Slider dialogs are styled a bit differently. See the ");
			a5 = element("a");
			t150 = text("demo");
			t151 = text(".");
			t152 = space();
			li31 = element("li");
			t153 = text("Icon Button");
			ul13 = element("ul");
			li30 = element("li");
			t154 = text("No longer emit ‘MDCIconButtonToggle:change’ event without the ");
			code25 = element("code");
			t155 = text("toggle");
			t156 = text(" prop. Instead, listen for click event.");
			t157 = space();
			li33 = element("li");
			t158 = text("Linear Progress");
			ul14 = element("ul");
			li32 = element("li");
			t159 = text("Removed ");
			code26 = element("code");
			t160 = text("reversed");
			t161 = text(" prop.");
			t162 = space();
			li35 = element("li");
			t163 = text("List");
			ul15 = element("ul");
			li34 = element("li");
			code27 = element("code");
			t164 = text("radiolist");
			t165 = text(" and ");
			code28 = element("code");
			t166 = text("checklist");
			t167 = text(" props renamed to ");
			code29 = element("code");
			t168 = text("radioList");
			t169 = text(" and ");
			code30 = element("code");
			t170 = text("checkList");
			t171 = text(".");
			t172 = space();
			li37 = element("li");
			t173 = text("Menu Surface");
			ul16 = element("ul");
			li36 = element("li");
			t174 = text("Anchor action now takes ");
			code31 = element("code");
			t175 = text("addClass");
			t176 = text(" and ");
			code32 = element("code");
			t177 = text("removeClass");
			t178 = text(" instead of ");
			code33 = element("code");
			t179 = text("classForward");
			t180 = text(" (like Ripple).");
			t181 = space();
			li39 = element("li");
			t182 = text("Ripple");
			ul17 = element("ul");
			li38 = element("li");
			a6 = element("a");
			t183 = text("Ripple’s options");
			t184 = text(" have changed considerably.");
			t185 = space();
			li45 = element("li");
			t186 = text("Select");
			ul18 = element("ul");
			li40 = element("li");
			t187 = text("This is almost completely rewritten. You will need to migrate code for it. Check out the demo page.");
			t188 = space();
			li41 = element("li");
			t189 = text("Helper Text in no longer a component. Instead, a ");
			code34 = element("code");
			t190 = text("svelte:fragment");
			t191 = text(" with text now goes inside the component in the “helper” slot. Its ID and ARIA attributes are set automatically.");
			t192 = space();
			li42 = element("li");
			t193 = text("Removed ");
			code35 = element("code");
			t194 = text("withLeadingIcon");
			t195 = text(" and ");
			code36 = element("code");
			t196 = text("selectedIndex");
			t197 = text(" props.");
			t198 = space();
			li43 = element("li");
			t199 = text("You no longer need ");
			code37 = element("code");
			t200 = text("withLeadingIcon");
			t201 = text(". Instead, put Icon into the “leadingIcon” slot.");
			t202 = space();
			li44 = element("li");
			t203 = text("You should now set ");
			code38 = element("code");
			t204 = text("required");
			t205 = text(" prop on the Select instead of ");
			code39 = element("code");
			t206 = text("input$required");
			t207 = text(".");
			t208 = space();
			li48 = element("li");
			t209 = text("Slider");
			ul19 = element("ul");
			li46 = element("li");
			code40 = element("code");
			t210 = text("displayMarkers");
			t211 = text(" prop renamed to ");
			code41 = element("code");
			t212 = text("tickMarks");
			t213 = text(".");
			t214 = space();
			li47 = element("li");
			code42 = element("code");
			t215 = text("step");
			t216 = text(" now defaults to 1 (same as the range HTML input).");
			t217 = space();
			li50 = element("li");
			t218 = text("Tab");
			ul20 = element("ul");
			li49 = element("li");
			t219 = text("Removed ");
			code43 = element("code");
			t220 = text("active");
			t221 = text(" and ");
			code44 = element("code");
			t222 = text("focusOnActivate");
			t223 = text(" props. (No longer needed, since TabBar controls them.)");
			t224 = space();
			li52 = element("li");
			t225 = text("TabBar");
			ul21 = element("ul");
			li51 = element("li");
			t226 = text("Removed ");
			code45 = element("code");
			t227 = text("activeIndex");
			t228 = text(" prop. ");
			code46 = element("code");
			t229 = text("active");
			t230 = text(" prop is now the only way to set the active tab, and it should be identical to one of the entries in ");
			code47 = element("code");
			t231 = text("tabs");
			t232 = text(" (pass objects by reference).");
			t233 = space();
			li60 = element("li");
			t234 = text("Textfield");
			ul22 = element("ul");
			li53 = element("li");
			t235 = text("This is almost completely rewritten. You will need to migrate code for it. Check out the demo page.");
			t236 = space();
			li54 = element("li");
			t237 = text("Helper Text and Character Counter now go inside the component in the “helper” slot. Their IDs and ARIA attributes are set automatically.");
			t238 = space();
			li55 = element("li");
			t239 = text("Character Counter in a ");
			code48 = element("code");
			t240 = text("textarea");
			t241 = text(" Textfield goes in the “internalCounter” slot.");
			t242 = space();
			li56 = element("li");
			t243 = text("Removed ");
			code49 = element("code");
			t244 = text("fullwidth");
			t245 = text(", ");
			code50 = element("code");
			t246 = text("dense");
			t247 = text(", ");
			code51 = element("code");
			t248 = text("withLeadingIcon");
			t249 = text(", and ");
			code52 = element("code");
			t250 = text("withTrailingIcon");
			t251 = text(" props.");
			t252 = space();
			li57 = element("li");
			t253 = text("You no longer need ");
			code53 = element("code");
			t254 = text("withLeadingIcon");
			t255 = text(" or ");
			code54 = element("code");
			t256 = text("withTrailingIcon");
			t257 = text(". Instead, put Icons into the “leadingIcon” and “trailingIcon” slots.");
			t258 = space();
			li58 = element("li");
			t259 = text("You should now set ");
			code55 = element("code");
			t260 = text("required");
			t261 = text(" prop on the Textfield instead of ");
			code56 = element("code");
			t262 = text("input$required");
			t263 = text(".");
			t264 = space();
			li59 = element("li");
			t265 = text("Manual setup now requires passing the sub-components into Textfield with ");
			code57 = element("code");
			t266 = text("input");
			t267 = text(", ");
			code58 = element("code");
			t268 = text("floatingLabel");
			t269 = text(", ");
			code59 = element("code");
			t270 = text("lineRipple");
			t271 = text(", and ");
			code60 = element("code");
			t272 = text("notchedOutline");
			t273 = text(" props.");
			t274 = space();
			h24 = element("h2");
			t275 = text("New Features.");
			t276 = space();
			h34 = element("h3");
			t277 = text("Theming, Sass");
			t278 = space();
			ul26 = element("ul");
			li62 = element("li");
			t279 = text("Paper");
			ul24 = element("ul");
			li61 = element("li");
			t280 = text("New ");
			code61 = element("code");
			t281 = text("paper-color");
			t282 = text(" mixin.");
			t283 = space();
			li64 = element("li");
			t284 = text("Switch");
			ul25 = element("ul");
			li63 = element("li");
			t285 = text("New ");
			code62 = element("code");
			t286 = text("color");
			t287 = text(" prop.");
			t288 = space();
			h35 = element("h3");
			t289 = text("Components");
			t290 = space();
			ul27 = element("ul");
			li65 = element("li");
			t291 = text("All components have a ");
			code63 = element("code");
			t292 = text("getElement");
			t293 = text(" function that will return their top level DOM element.");
			t294 = space();
			li66 = element("li");
			t295 = text("All components now forward ");
			strong = element("strong");
			t296 = text("all");
			t297 = text(" events, and only listen for them if bounded.");
			t298 = space();
			li67 = element("li");
			t299 = text("They can also take event modifiers with the ”:” syntax istead of ”|” (");
			code64 = element("code");
			t300 = text("on:click:capture={handler}");
			t301 = text(").");
			t302 = space();
			p8 = element("p");
			t303 = text("New Components");
			t304 = space();
			ul28 = element("ul");
			li68 = element("li");
			t305 = text("Banners");
			t306 = space();
			li69 = element("li");
			t307 = text("Circular Progress");
			t308 = space();
			li70 = element("li");
			t309 = text("Layout Grids");
			t310 = space();
			li71 = element("li");
			t311 = text("Segmented Buttons");
			t312 = space();
			li72 = element("li");
			t313 = text("Tooltips");
			t314 = space();
			li73 = element("li");
			t315 = text("Touch Target Wrappers");
			t316 = space();
			p9 = element("p");
			t317 = text("New Features in Existing Components");
			t318 = space();
			ul44 = element("ul");
			li76 = element("li");
			t319 = text("Chips");
			ul29 = element("ul");
			li74 = element("li");
			t320 = text("New ");
			code65 = element("code");
			t321 = text("nonInteractive");
			t322 = text(" prop on Set.");
			t323 = space();
			li75 = element("li");
			t324 = text("New ");
			code66 = element("code");
			t325 = text("shouldFocusPrimaryActionOnClick");
			t326 = text(" prop on Chip.");
			t327 = space();
			li78 = element("li");
			t328 = text("Common");
			ul30 = element("ul");
			li77 = element("li");
			t329 = text("Icon now takes a ");
			code67 = element("code");
			t330 = text("component");
			t331 = text(" prop.");
			t332 = space();
			li85 = element("li");
			t333 = text("Data Table");
			ul31 = element("ul");
			li79 = element("li");
			t334 = text("New ");
			code68 = element("code");
			t335 = text("stickyHeader");
			t336 = text(" prop.");
			t337 = space();
			li80 = element("li");
			t338 = text("New ");
			code69 = element("code");
			t339 = text("columnId");
			t340 = text(" prop on Cell (defaults to an automatic ID).");
			t341 = space();
			li81 = element("li");
			t342 = text("New ");
			code70 = element("code");
			t343 = text("rowId");
			t344 = text(" prop on Row (defaults to an automatic ID).");
			t345 = space();
			li82 = element("li");
			t346 = text("Pagination");
			t347 = space();
			li83 = element("li");
			t348 = text("Progress Indicator");
			t349 = space();
			li84 = element("li");
			t350 = text("Column Sort Buttons");
			t351 = space();
			li87 = element("li");
			t352 = text("Dialog");
			ul32 = element("ul");
			li86 = element("li");
			t353 = text("New ");
			code71 = element("code");
			t354 = text("selection");
			t355 = text(" prop.");
			t356 = space();
			li90 = element("li");
			t357 = text("Drawer");
			ul33 = element("ul");
			li88 = element("li");
			t358 = text("New ");
			code72 = element("code");
			t359 = text("fixed");
			t360 = text(" prop (defaults to true).");
			t361 = space();
			li89 = element("li");
			t362 = text("New ");
			code73 = element("code");
			t363 = text("isOpen");
			t364 = text(" function.");
			t365 = space();
			li92 = element("li");
			t366 = text("FAB");
			ul34 = element("ul");
			li91 = element("li");
			t367 = text("New ");
			code74 = element("code");
			t368 = text("touch");
			t369 = text(" prop.");
			t370 = space();
			li94 = element("li");
			t371 = text("Form Field");
			ul35 = element("ul");
			li93 = element("li");
			t372 = text("New ");
			code75 = element("code");
			t373 = text("noWrap");
			t374 = text(" prop.");
			t375 = space();
			li96 = element("li");
			t376 = text("Icon Button");
			ul36 = element("ul");
			li95 = element("li");
			t377 = text("New ");
			code76 = element("code");
			t378 = text("ariaLabelOn");
			t379 = text(" and ");
			code77 = element("code");
			t380 = text("ariaLabelOff");
			t381 = text(" props for toggle buttons.");
			t382 = space();
			li100 = element("li");
			t383 = text("Menu");
			ul37 = element("ul");
			li97 = element("li");
			t384 = text("New ");
			code78 = element("code");
			t385 = text("isOpen");
			t386 = text(" function.");
			t387 = space();
			li98 = element("li");
			t388 = text("New ");
			code79 = element("code");
			t389 = text("setOpen");
			t390 = text(" function.");
			t391 = space();
			li99 = element("li");
			t392 = text("New ");
			code80 = element("code");
			t393 = text("setDefaultFocusState");
			t394 = text(" function.");
			t395 = space();
			li104 = element("li");
			t396 = text("Menu Surface");
			ul38 = element("ul");
			li101 = element("li");
			t397 = text("New ");
			code81 = element("code");
			t398 = text("fullWidth");
			t399 = text(" prop.");
			t400 = space();
			li102 = element("li");
			t401 = text("New ");
			code82 = element("code");
			t402 = text("anchorMargin");
			t403 = text(" prop.");
			t404 = space();
			li103 = element("li");
			t405 = text("New ");
			code83 = element("code");
			t406 = text("MDCMenuSurface:closing");
			t407 = text(" event.");
			t408 = space();
			li107 = element("li");
			t409 = text("Select");
			ul39 = element("ul");
			li105 = element("li");
			t410 = text("New ");
			code84 = element("code");
			t411 = text("hiddenInput");
			t412 = text(" prop.");
			t413 = space();
			li106 = element("li");
			t414 = text("New ");
			code85 = element("code");
			t415 = text("key");
			t416 = text(" prop for using objects as options.");
			t417 = space();
			li110 = element("li");
			t418 = text("Slider");
			ul40 = element("ul");
			li108 = element("li");
			t419 = text("New ");
			code86 = element("code");
			t420 = text("range");
			t421 = text(", ");
			code87 = element("code");
			t422 = text("start");
			t423 = text(", ");
			code88 = element("code");
			t424 = text("end");
			t425 = text(" props for range sliders.");
			t426 = space();
			li109 = element("li");
			t427 = text("New ");
			code89 = element("code");
			t428 = text("valueToAriaValueTextFn");
			t429 = text(" prop for updating the ARIA value attribute.");
			t430 = space();
			li112 = element("li");
			t431 = text("TabBar");
			ul41 = element("ul");
			li111 = element("li");
			t432 = text("New ");
			code90 = element("code");
			t433 = text("tabScroller$align");
			t434 = text(" prop.");
			t435 = space();
			li117 = element("li");
			t436 = text("Textfield");
			ul42 = element("ul");
			li113 = element("li");
			t437 = text("New ");
			code91 = element("code");
			t438 = text("prefix");
			t439 = text(" and ");
			code92 = element("code");
			t440 = text("suffix");
			t441 = text(" props.");
			t442 = space();
			li114 = element("li");
			t443 = text("New ");
			code93 = element("code");
			t444 = text("validateOnValueChange");
			t445 = text(" prop.");
			t446 = space();
			li115 = element("li");
			t447 = text("New ");
			code94 = element("code");
			t448 = text("input$resizable={false}");
			t449 = text(" prop to disable textarea resizing.");
			t450 = space();
			li116 = element("li");
			t451 = text("New ");
			code95 = element("code");
			t452 = text("helperLine$");
			t453 = text(" ”$” props passed to the helper line.");
			t454 = space();
			li119 = element("li");
			t455 = text("Top App Bar");
			ul43 = element("ul");
			li118 = element("li");
			t456 = text("New ");
			code96 = element("code");
			t457 = text("scrollTarget");
			t458 = text(" prop.");
			t459 = space();
			p10 = element("p");
			t460 = text("If you have trouble upgrading with these instructions, you can raise an issue on GitHub.");
			t461 = space();
			h15 = element("h1");
			t462 = text("SMUI 1 -> SMUI 2");
			t463 = space();
			p11 = element("p");
			t464 = text("SMUI 2 migrated to upstream MDC 4.0 from 3.0:\n");
			a7 = element("a");
			t465 = text("https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#400-2019-11-02-1");
			t466 = space();
			ul49 = element("ul");
			li124 = element("li");
			t467 = text("Chips");
			ul45 = element("ul");
			li120 = element("li");
			t468 = text("Text component is now required.");
			t469 = space();
			li121 = element("li");
			t470 = text("Now use their own Text and Icon components. The common ones will not work.");
			t471 = space();
			li122 = element("li");
			t472 = text("Icon no longer requires ");
			code97 = element("code");
			t473 = text("trailing");
			t474 = text(" prop. That is the default.");
			t475 = space();
			li123 = element("li");
			t476 = text("Checkmark component is no longer required. It is added automatically.");
			t477 = space();
			li126 = element("li");
			t478 = text("Menu and Menu Surface");
			ul46 = element("ul");
			li125 = element("li");
			t479 = text("hoistMenuToBody function removed.");
			t480 = space();
			li130 = element("li");
			t481 = text("Select");
			ul47 = element("ul");
			li127 = element("li");
			code98 = element("code");
			t482 = text("enchanced");
			t483 = text(" prop is removed. All selects are enhanced now.");
			t484 = space();
			li128 = element("li");
			code99 = element("code");
			t485 = text("selected");
			t486 = text(" prop on Option is no longer required and probably should not be used.");
			t487 = space();
			li129 = element("li");
			t488 = text("You now need to pass a class into ");
			code100 = element("code");
			t489 = text("anchor$class");
			t490 = text(" and ");
			code101 = element("code");
			t491 = text("menu$class");
			t492 = text(" with a width value set.");
			t493 = space();
			li132 = element("li");
			t494 = text("Button");
			ul48 = element("ul");
			li131 = element("li");
			t495 = text("No longer has a ");
			code102 = element("code");
			t496 = text("dense");
			t497 = text(" prop. Use the mixin from MDC.");
			this.h();
		},
		l: function claim(nodes) {
			h10 = claim_element(nodes, "H1", { id: true });
			var h10_nodes = children(h10);
			t0 = claim_text(h10_nodes, "Migrating to Newer SMUI Versions");
			h10_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			p0 = claim_element(nodes, "P", {});
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "This doc contains information that will help you migrate your code from an older version of SMUI to a newer one. Things that you will need to change in your existing code will be written here. It would also be helpful to check the MDC changelog if the upstream MDC versions has changed between SMUI versions.");
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);
			h11 = claim_element(nodes, "H1", { id: true });
			var h11_nodes = children(h11);
			t4 = claim_text(h11_nodes, "SMUI 4.0 -> SMUI 4.1");
			h11_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);
			ul1 = claim_element(nodes, "UL", {});
			var ul1_nodes = children(ul1);
			li1 = claim_element(ul1_nodes, "LI", {});
			var li1_nodes = children(li1);
			t6 = claim_text(li1_nodes, "Event modifiers have changed to use ”$” instead of ”:” (");
			code0 = claim_element(li1_nodes, "CODE", {});
			var code0_nodes = children(code0);
			t7 = claim_text(code0_nodes, "on:click$capture={handler}");
			code0_nodes.forEach(detach_dev);
			t8 = claim_text(li1_nodes, "), so that all events, even MDC events, can be bound with modifiers.");
			ul0 = claim_element(li1_nodes, "UL", {});
			var ul0_nodes = children(ul0);
			li0 = claim_element(ul0_nodes, "LI", {});
			var li0_nodes = children(li0);
			t9 = claim_text(li0_nodes, "The old ”:” syntax will still work, it will just give a warning in the console.");
			li0_nodes.forEach(detach_dev);
			ul0_nodes.forEach(detach_dev);
			li1_nodes.forEach(detach_dev);
			ul1_nodes.forEach(detach_dev);
			t10 = claim_space(nodes);
			h12 = claim_element(nodes, "H1", { id: true });
			var h12_nodes = children(h12);
			t11 = claim_text(h12_nodes, "SMUI 3 -> SMUI 4");
			h12_nodes.forEach(detach_dev);
			t12 = claim_space(nodes);
			h20 = claim_element(nodes, "H2", { id: true });
			var h20_nodes = children(h20);
			t13 = claim_text(h20_nodes, "Breaking Changes");
			h20_nodes.forEach(detach_dev);
			t14 = claim_space(nodes);
			p1 = claim_element(nodes, "P", {});
			var p1_nodes = children(p1);
			t15 = claim_text(p1_nodes, "Components no longer import styles from their “index.js” files. If you were using “/bare” before, you don’t need to anymore. If you were relying on styles being imported, you now need to use the “/styled” endpoint for components.");
			p1_nodes.forEach(detach_dev);
			t16 = claim_space(nodes);
			p2 = claim_element(nodes, "P", {});
			var p2_nodes = children(p2);
			t17 = claim_text(p2_nodes, "Check out the new ");
			a0 = claim_element(p2_nodes, "A", { href: true, rel: true });
			var a0_nodes = children(a0);
			t18 = claim_text(a0_nodes, "smui-theme");
			a0_nodes.forEach(detach_dev);
			t19 = claim_text(p2_nodes, " package. It can help you with your themes.");
			p2_nodes.forEach(detach_dev);
			t20 = claim_space(nodes);
			h13 = claim_element(nodes, "H1", { id: true });
			var h13_nodes = children(h13);
			t21 = claim_text(h13_nodes, "SMUI 3.0 -> SMUI 3.1");
			h13_nodes.forEach(detach_dev);
			t22 = claim_space(nodes);
			p3 = claim_element(nodes, "P", {});
			var p3_nodes = children(p3);
			t23 = claim_text(p3_nodes, "SMUI 3.1 migrated to upstream MDC 11.0 from 10.0:\n");
			a1 = claim_element(p3_nodes, "A", { href: true, rel: true });
			var a1_nodes = children(a1);
			t24 = claim_text(a1_nodes, "https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#1100-2021-04-15");
			a1_nodes.forEach(detach_dev);
			p3_nodes.forEach(detach_dev);
			t25 = claim_space(nodes);
			p4 = claim_element(nodes, "P", {});
			var p4_nodes = children(p4);
			t26 = claim_text(p4_nodes, "You should update your MDC dependencies to 11.0 as well.");
			p4_nodes.forEach(detach_dev);
			t27 = claim_space(nodes);
			h21 = claim_element(nodes, "H2", { id: true });
			var h21_nodes = children(h21);
			t28 = claim_text(h21_nodes, "Breaking Changes");
			h21_nodes.forEach(detach_dev);
			t29 = claim_space(nodes);
			h30 = claim_element(nodes, "H3", { id: true });
			var h30_nodes = children(h30);
			t30 = claim_text(h30_nodes, "Theming, Sass");
			h30_nodes.forEach(detach_dev);
			t31 = claim_space(nodes);
			ul2 = claim_element(nodes, "UL", {});
			var ul2_nodes = children(ul2);
			li2 = claim_element(ul2_nodes, "LI", {});
			var li2_nodes = children(li2);
			t32 = claim_text(li2_nodes, "MDC-Web chips trailing actions class changed.");
			li2_nodes.forEach(detach_dev);
			t33 = claim_space(ul2_nodes);
			li3 = claim_element(ul2_nodes, "LI", {});
			var li3_nodes = children(li3);
			t34 = claim_text(li3_nodes, "MDC-Web list classes changed.");
			li3_nodes.forEach(detach_dev);
			ul2_nodes.forEach(detach_dev);
			t35 = claim_space(nodes);
			h22 = claim_element(nodes, "H2", { id: true });
			var h22_nodes = children(h22);
			t36 = claim_text(h22_nodes, "New Features");
			h22_nodes.forEach(detach_dev);
			t37 = claim_space(nodes);
			h31 = claim_element(nodes, "H3", { id: true });
			var h31_nodes = children(h31);
			t38 = claim_text(h31_nodes, "Compoennts");
			h31_nodes.forEach(detach_dev);
			t39 = claim_space(nodes);
			ul8 = claim_element(nodes, "UL", {});
			var ul8_nodes = children(ul8);
			li5 = claim_element(ul8_nodes, "LI", {});
			var li5_nodes = children(li5);
			t40 = claim_text(li5_nodes, "Banner");
			ul3 = claim_element(li5_nodes, "UL", {});
			var ul3_nodes = children(ul3);
			li4 = claim_element(ul3_nodes, "LI", {});
			var li4_nodes = children(li4);
			t41 = claim_text(li4_nodes, "Add focus trap on the banner.");
			li4_nodes.forEach(detach_dev);
			ul3_nodes.forEach(detach_dev);
			li5_nodes.forEach(detach_dev);
			t42 = claim_space(ul8_nodes);
			li8 = claim_element(ul8_nodes, "LI", {});
			var li8_nodes = children(li8);
			t43 = claim_text(li8_nodes, "Dialog");
			ul4 = claim_element(li8_nodes, "UL", {});
			var ul4_nodes = children(ul4);
			li6 = claim_element(ul4_nodes, "LI", {});
			var li6_nodes = children(li6);
			t44 = claim_text(li6_nodes, "New ");
			code1 = claim_element(li6_nodes, "CODE", {});
			var code1_nodes = children(code1);
			t45 = claim_text(code1_nodes, "fullscreen");
			code1_nodes.forEach(detach_dev);
			t46 = claim_text(li6_nodes, " prop.");
			li6_nodes.forEach(detach_dev);
			t47 = claim_space(ul4_nodes);
			li7 = claim_element(ul4_nodes, "LI", {});
			var li7_nodes = children(li7);
			t48 = claim_text(li7_nodes, "New ");
			code2 = claim_element(li7_nodes, "CODE", {});
			var code2_nodes = children(code2);
			t49 = claim_text(code2_nodes, "over");
			code2_nodes.forEach(detach_dev);
			t50 = claim_text(li7_nodes, " slot.");
			li7_nodes.forEach(detach_dev);
			ul4_nodes.forEach(detach_dev);
			li8_nodes.forEach(detach_dev);
			t51 = claim_space(ul8_nodes);
			li11 = claim_element(ul8_nodes, "LI", {});
			var li11_nodes = children(li11);
			t52 = claim_text(li11_nodes, "Menu Surface");
			ul5 = claim_element(li11_nodes, "UL", {});
			var ul5_nodes = children(ul5);
			li9 = claim_element(ul5_nodes, "LI", {});
			var li9_nodes = children(li9);
			t53 = claim_text(li9_nodes, "New ");
			code3 = claim_element(li9_nodes, "CODE", {});
			var code3_nodes = children(code3);
			t54 = claim_text(code3_nodes, "maxHeight");
			code3_nodes.forEach(detach_dev);
			t55 = claim_text(li9_nodes, " prop.");
			li9_nodes.forEach(detach_dev);
			t56 = claim_space(ul5_nodes);
			li10 = claim_element(ul5_nodes, "LI", {});
			var li10_nodes = children(li10);
			t57 = claim_text(li10_nodes, "New ");
			code4 = claim_element(li10_nodes, "CODE", {});
			var code4_nodes = children(code4);
			t58 = claim_text(code4_nodes, "horizontallyCenteredOnViewport");
			code4_nodes.forEach(detach_dev);
			t59 = claim_text(li10_nodes, " prop.");
			li10_nodes.forEach(detach_dev);
			ul5_nodes.forEach(detach_dev);
			li11_nodes.forEach(detach_dev);
			t60 = claim_space(ul8_nodes);
			li13 = claim_element(ul8_nodes, "LI", {});
			var li13_nodes = children(li13);
			t61 = claim_text(li13_nodes, "Slider");
			ul6 = claim_element(li13_nodes, "UL", {});
			var ul6_nodes = children(ul6);
			li12 = claim_element(ul6_nodes, "LI", {});
			var li12_nodes = children(li12);
			t62 = claim_text(li12_nodes, "Rounds values to correct decimal places based on ");
			code5 = claim_element(li12_nodes, "CODE", {});
			var code5_nodes = children(code5);
			t63 = claim_text(code5_nodes, "step");
			code5_nodes.forEach(detach_dev);
			t64 = claim_text(li12_nodes, " prop.");
			li12_nodes.forEach(detach_dev);
			ul6_nodes.forEach(detach_dev);
			li13_nodes.forEach(detach_dev);
			t65 = claim_space(ul8_nodes);
			li15 = claim_element(ul8_nodes, "LI", {});
			var li15_nodes = children(li15);
			t66 = claim_text(li15_nodes, "Tooltip");
			ul7 = claim_element(li15_nodes, "UL", {});
			var ul7_nodes = children(ul7);
			li14 = claim_element(ul7_nodes, "LI", {});
			var li14_nodes = children(li14);
			t67 = claim_text(li14_nodes, "New ");
			code6 = claim_element(li14_nodes, "CODE", {});
			var code6_nodes = children(code6);
			t68 = claim_text(code6_nodes, "attachScrollHandler");
			code6_nodes.forEach(detach_dev);
			t69 = claim_text(li14_nodes, " and ");
			code7 = claim_element(li14_nodes, "CODE", {});
			var code7_nodes = children(code7);
			t70 = claim_text(code7_nodes, "removeScrollHandler");
			code7_nodes.forEach(detach_dev);
			t71 = claim_text(li14_nodes, " functions for adding additional scrollable elements to handle. Both accept a function.");
			li14_nodes.forEach(detach_dev);
			ul7_nodes.forEach(detach_dev);
			li15_nodes.forEach(detach_dev);
			ul8_nodes.forEach(detach_dev);
			t72 = claim_space(nodes);
			h14 = claim_element(nodes, "H1", { id: true });
			var h14_nodes = children(h14);
			t73 = claim_text(h14_nodes, "SMUI 2 -> SMUI 3");
			h14_nodes.forEach(detach_dev);
			t74 = claim_space(nodes);
			p5 = claim_element(nodes, "P", {});
			var p5_nodes = children(p5);
			t75 = claim_text(p5_nodes, "You will need to migrate to Dart Sass. ");
			code8 = claim_element(p5_nodes, "CODE", {});
			var code8_nodes = children(code8);
			t76 = claim_text(code8_nodes, "node-sass");
			code8_nodes.forEach(detach_dev);
			t77 = claim_text(p5_nodes, " is no longer supported, as it is deprecated and too old now.");
			p5_nodes.forEach(detach_dev);
			t78 = claim_space(nodes);
			pre = claim_element(nodes, "PRE", { class: true });
			var pre_nodes = children(pre);
			pre_nodes.forEach(detach_dev);
			t79 = claim_space(nodes);
			p6 = claim_element(nodes, "P", {});
			var p6_nodes = children(p6);
			t80 = claim_text(p6_nodes, "SMUI 3 migrated to upstream MDC 10.0 from 4.0:\n");
			a2 = claim_element(p6_nodes, "A", { href: true, rel: true });
			var a2_nodes = children(a2);
			t81 = claim_text(a2_nodes, "https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#1000-2021-02-05");
			a2_nodes.forEach(detach_dev);
			p6_nodes.forEach(detach_dev);
			t82 = claim_space(nodes);
			p7 = claim_element(nodes, "P", {});
			var p7_nodes = children(p7);
			t83 = claim_text(p7_nodes, "There are ");
			a3 = claim_element(p7_nodes, "A", { href: true });
			var a3_nodes = children(a3);
			t84 = claim_text(a3_nodes, "newly updated instructiong");
			a3_nodes.forEach(detach_dev);
			t85 = claim_text(p7_nodes, " for using SMUI in Sapper.");
			p7_nodes.forEach(detach_dev);
			t86 = claim_space(nodes);
			h23 = claim_element(nodes, "H2", { id: true });
			var h23_nodes = children(h23);
			t87 = claim_text(h23_nodes, "Breaking Changes");
			h23_nodes.forEach(detach_dev);
			t88 = claim_space(nodes);
			h32 = claim_element(nodes, "H3", { id: true });
			var h32_nodes = children(h32);
			t89 = claim_text(h32_nodes, "Theming, Sass");
			h32_nodes.forEach(detach_dev);
			t90 = claim_space(nodes);
			ul9 = claim_element(nodes, "UL", {});
			var ul9_nodes = children(ul9);
			li16 = claim_element(ul9_nodes, "LI", {});
			var li16_nodes = children(li16);
			t91 = claim_text(li16_nodes, "MDC-Web migrated to the “@use” syntax, so mixins, functions, and variables are namespaced by the “@use” statement now instead of a prefix.");
			li16_nodes.forEach(detach_dev);
			t92 = claim_space(ul9_nodes);
			li17 = claim_element(ul9_nodes, "LI", {});
			var li17_nodes = children(li17);
			t93 = claim_text(li17_nodes, "Theming has changed, so you’ll need to update your ”_smui-theme.scss” file. Follow ");
			a4 = claim_element(li17_nodes, "A", { href: true });
			var a4_nodes = children(a4);
			t94 = claim_text(a4_nodes, "this guide");
			a4_nodes.forEach(detach_dev);
			t95 = claim_text(li17_nodes, ".");
			li17_nodes.forEach(detach_dev);
			ul9_nodes.forEach(detach_dev);
			t96 = claim_space(nodes);
			h33 = claim_element(nodes, "H3", { id: true });
			var h33_nodes = children(h33);
			t97 = claim_text(h33_nodes, "Components");
			h33_nodes.forEach(detach_dev);
			t98 = claim_space(nodes);
			ul23 = claim_element(nodes, "UL", {});
			var ul23_nodes = children(ul23);
			li23 = claim_element(ul23_nodes, "LI", {});
			var li23_nodes = children(li23);
			t99 = claim_text(li23_nodes, "Chips");
			ul10 = claim_element(li23_nodes, "UL", {});
			var ul10_nodes = children(ul10);
			li18 = claim_element(ul10_nodes, "LI", {});
			var li18_nodes = children(li18);
			t100 = claim_text(li18_nodes, "You now need to use ");
			code9 = claim_element(li18_nodes, "CODE", {});
			var code9_nodes = children(code9);
			t101 = claim_text(code9_nodes, "let:chip");
			code9_nodes.forEach(detach_dev);
			t102 = claim_text(li18_nodes, " on the set and pass it to the chip with ");
			code10 = claim_element(li18_nodes, "CODE", {});
			var code10_nodes = children(code10);
			t103 = claim_text(code10_nodes, "{chip}");
			code10_nodes.forEach(detach_dev);
			t104 = claim_text(li18_nodes, ".");
			li18_nodes.forEach(detach_dev);
			t105 = claim_space(ul10_nodes);
			li19 = claim_element(ul10_nodes, "LI", {});
			var li19_nodes = children(li19);
			t106 = claim_text(li19_nodes, "Chips now export LeadingIcon, TrailingIcon, and TrailingAction, instead of Icon.");
			li19_nodes.forEach(detach_dev);
			t107 = claim_space(ul10_nodes);
			li20 = claim_element(ul10_nodes, "LI", {});
			var li20_nodes = children(li20);
			t108 = claim_text(li20_nodes, "Removed ");
			code11 = claim_element(li20_nodes, "CODE", {});
			var code11_nodes = children(code11);
			t109 = claim_text(code11_nodes, "selected");
			code11_nodes.forEach(detach_dev);
			t110 = claim_text(li20_nodes, " prop on Chip. ");
			code12 = claim_element(li20_nodes, "CODE", {});
			var code12_nodes = children(code12);
			t111 = claim_text(code12_nodes, "selected");
			code12_nodes.forEach(detach_dev);
			t112 = claim_text(li20_nodes, " prop on Chips is now the only way to set the selected chip(s), and it/they should be identical to one/some of the entries in ");
			code13 = claim_element(li20_nodes, "CODE", {});
			var code13_nodes = children(code13);
			t113 = claim_text(code13_nodes, "chips");
			code13_nodes.forEach(detach_dev);
			t114 = claim_text(li20_nodes, " (pass objects by reference).");
			li20_nodes.forEach(detach_dev);
			t115 = claim_space(ul10_nodes);
			li21 = claim_element(ul10_nodes, "LI", {});
			var li21_nodes = children(li21);
			t116 = claim_text(li21_nodes, "Don’t provide any ");
			code14 = claim_element(li21_nodes, "CODE", {});
			var code14_nodes = children(code14);
			t117 = claim_text(code14_nodes, "tabindex");
			code14_nodes.forEach(detach_dev);
			t118 = claim_text(li21_nodes, " props to any of the Chips, Texts, or the Set. They will manage their own tabindex.");
			li21_nodes.forEach(detach_dev);
			t119 = claim_space(ul10_nodes);
			li22 = claim_element(ul10_nodes, "LI", {});
			var li22_nodes = children(li22);
			t120 = claim_text(li22_nodes, "On TrailingAction, use ");
			code15 = claim_element(li22_nodes, "CODE", {});
			var code15_nodes = children(code15);
			t121 = claim_text(code15_nodes, "icon$class");
			code15_nodes.forEach(detach_dev);
			t122 = claim_text(li22_nodes, " to add classes to the icon element.");
			li22_nodes.forEach(detach_dev);
			ul10_nodes.forEach(detach_dev);
			li23_nodes.forEach(detach_dev);
			t123 = claim_space(ul23_nodes);
			li25 = claim_element(ul23_nodes, "LI", {});
			var li25_nodes = children(li25);
			t124 = claim_text(li25_nodes, "Data Table");
			ul11 = claim_element(li25_nodes, "UL", {});
			var ul11_nodes = children(ul11);
			li24 = claim_element(ul11_nodes, "LI", {});
			var li24_nodes = children(li24);
			code16 = claim_element(li24_nodes, "CODE", {});
			var code16_nodes = children(code16);
			t125 = claim_text(code16_nodes, "numeric");
			code16_nodes.forEach(detach_dev);
			t126 = claim_text(li24_nodes, " prop on Cell should now also be set on Head Cells.");
			li24_nodes.forEach(detach_dev);
			ul11_nodes.forEach(detach_dev);
			li25_nodes.forEach(detach_dev);
			t127 = claim_space(ul23_nodes);
			li29 = claim_element(ul23_nodes, "LI", {});
			var li29_nodes = children(li29);
			t128 = claim_text(li29_nodes, "Dialog");
			ul12 = claim_element(li29_nodes, "UL", {});
			var ul12_nodes = children(ul12);
			li26 = claim_element(ul12_nodes, "LI", {});
			var li26_nodes = children(li26);
			t129 = claim_text(li26_nodes, "Open state is now controled by an ");
			code17 = claim_element(li26_nodes, "CODE", {});
			var code17_nodes = children(code17);
			t130 = claim_text(code17_nodes, "open");
			code17_nodes.forEach(detach_dev);
			t131 = claim_text(li26_nodes, " prop, instead of ");
			code18 = claim_element(li26_nodes, "CODE", {});
			var code18_nodes = children(code18);
			t132 = claim_text(code18_nodes, "open");
			code18_nodes.forEach(detach_dev);
			t133 = claim_text(li26_nodes, " and ");
			code19 = claim_element(li26_nodes, "CODE", {});
			var code19_nodes = children(code19);
			t134 = claim_text(code19_nodes, "close");
			code19_nodes.forEach(detach_dev);
			t135 = claim_text(li26_nodes, " functions. There are also ");
			code20 = claim_element(li26_nodes, "CODE", {});
			var code20_nodes = children(code20);
			t136 = claim_text(code20_nodes, "isOpen");
			code20_nodes.forEach(detach_dev);
			t137 = claim_text(li26_nodes, " and ");
			code21 = claim_element(li26_nodes, "CODE", {});
			var code21_nodes = children(code21);
			t138 = claim_text(code21_nodes, "setOpen");
			code21_nodes.forEach(detach_dev);
			t139 = claim_text(li26_nodes, " functions.");
			li26_nodes.forEach(detach_dev);
			t140 = claim_space(ul12_nodes);
			li27 = claim_element(ul12_nodes, "LI", {});
			var li27_nodes = children(li27);
			t141 = claim_text(li27_nodes, "Lists should now be placed below ");
			code22 = claim_element(li27_nodes, "CODE", {});
			var code22_nodes = children(code22);
			t142 = claim_text(code22_nodes, "Content");
			code22_nodes.forEach(detach_dev);
			t143 = claim_text(li27_nodes, " element, rather than being the ");
			code23 = claim_element(li27_nodes, "CODE", {});
			var code23_nodes = children(code23);
			t144 = claim_text(code23_nodes, "Content");
			code23_nodes.forEach(detach_dev);
			t145 = claim_text(li27_nodes, " component. For selection from a list, use the new ");
			code24 = claim_element(li27_nodes, "CODE", {});
			var code24_nodes = children(code24);
			t146 = claim_text(code24_nodes, "selection");
			code24_nodes.forEach(detach_dev);
			t147 = claim_text(li27_nodes, " prop on the dialog.");
			li27_nodes.forEach(detach_dev);
			t148 = claim_space(ul12_nodes);
			li28 = claim_element(ul12_nodes, "LI", {});
			var li28_nodes = children(li28);
			t149 = claim_text(li28_nodes, "Slider dialogs are styled a bit differently. See the ");
			a5 = claim_element(li28_nodes, "A", { href: true, rel: true });
			var a5_nodes = children(a5);
			t150 = claim_text(a5_nodes, "demo");
			a5_nodes.forEach(detach_dev);
			t151 = claim_text(li28_nodes, ".");
			li28_nodes.forEach(detach_dev);
			ul12_nodes.forEach(detach_dev);
			li29_nodes.forEach(detach_dev);
			t152 = claim_space(ul23_nodes);
			li31 = claim_element(ul23_nodes, "LI", {});
			var li31_nodes = children(li31);
			t153 = claim_text(li31_nodes, "Icon Button");
			ul13 = claim_element(li31_nodes, "UL", {});
			var ul13_nodes = children(ul13);
			li30 = claim_element(ul13_nodes, "LI", {});
			var li30_nodes = children(li30);
			t154 = claim_text(li30_nodes, "No longer emit ‘MDCIconButtonToggle:change’ event without the ");
			code25 = claim_element(li30_nodes, "CODE", {});
			var code25_nodes = children(code25);
			t155 = claim_text(code25_nodes, "toggle");
			code25_nodes.forEach(detach_dev);
			t156 = claim_text(li30_nodes, " prop. Instead, listen for click event.");
			li30_nodes.forEach(detach_dev);
			ul13_nodes.forEach(detach_dev);
			li31_nodes.forEach(detach_dev);
			t157 = claim_space(ul23_nodes);
			li33 = claim_element(ul23_nodes, "LI", {});
			var li33_nodes = children(li33);
			t158 = claim_text(li33_nodes, "Linear Progress");
			ul14 = claim_element(li33_nodes, "UL", {});
			var ul14_nodes = children(ul14);
			li32 = claim_element(ul14_nodes, "LI", {});
			var li32_nodes = children(li32);
			t159 = claim_text(li32_nodes, "Removed ");
			code26 = claim_element(li32_nodes, "CODE", {});
			var code26_nodes = children(code26);
			t160 = claim_text(code26_nodes, "reversed");
			code26_nodes.forEach(detach_dev);
			t161 = claim_text(li32_nodes, " prop.");
			li32_nodes.forEach(detach_dev);
			ul14_nodes.forEach(detach_dev);
			li33_nodes.forEach(detach_dev);
			t162 = claim_space(ul23_nodes);
			li35 = claim_element(ul23_nodes, "LI", {});
			var li35_nodes = children(li35);
			t163 = claim_text(li35_nodes, "List");
			ul15 = claim_element(li35_nodes, "UL", {});
			var ul15_nodes = children(ul15);
			li34 = claim_element(ul15_nodes, "LI", {});
			var li34_nodes = children(li34);
			code27 = claim_element(li34_nodes, "CODE", {});
			var code27_nodes = children(code27);
			t164 = claim_text(code27_nodes, "radiolist");
			code27_nodes.forEach(detach_dev);
			t165 = claim_text(li34_nodes, " and ");
			code28 = claim_element(li34_nodes, "CODE", {});
			var code28_nodes = children(code28);
			t166 = claim_text(code28_nodes, "checklist");
			code28_nodes.forEach(detach_dev);
			t167 = claim_text(li34_nodes, " props renamed to ");
			code29 = claim_element(li34_nodes, "CODE", {});
			var code29_nodes = children(code29);
			t168 = claim_text(code29_nodes, "radioList");
			code29_nodes.forEach(detach_dev);
			t169 = claim_text(li34_nodes, " and ");
			code30 = claim_element(li34_nodes, "CODE", {});
			var code30_nodes = children(code30);
			t170 = claim_text(code30_nodes, "checkList");
			code30_nodes.forEach(detach_dev);
			t171 = claim_text(li34_nodes, ".");
			li34_nodes.forEach(detach_dev);
			ul15_nodes.forEach(detach_dev);
			li35_nodes.forEach(detach_dev);
			t172 = claim_space(ul23_nodes);
			li37 = claim_element(ul23_nodes, "LI", {});
			var li37_nodes = children(li37);
			t173 = claim_text(li37_nodes, "Menu Surface");
			ul16 = claim_element(li37_nodes, "UL", {});
			var ul16_nodes = children(ul16);
			li36 = claim_element(ul16_nodes, "LI", {});
			var li36_nodes = children(li36);
			t174 = claim_text(li36_nodes, "Anchor action now takes ");
			code31 = claim_element(li36_nodes, "CODE", {});
			var code31_nodes = children(code31);
			t175 = claim_text(code31_nodes, "addClass");
			code31_nodes.forEach(detach_dev);
			t176 = claim_text(li36_nodes, " and ");
			code32 = claim_element(li36_nodes, "CODE", {});
			var code32_nodes = children(code32);
			t177 = claim_text(code32_nodes, "removeClass");
			code32_nodes.forEach(detach_dev);
			t178 = claim_text(li36_nodes, " instead of ");
			code33 = claim_element(li36_nodes, "CODE", {});
			var code33_nodes = children(code33);
			t179 = claim_text(code33_nodes, "classForward");
			code33_nodes.forEach(detach_dev);
			t180 = claim_text(li36_nodes, " (like Ripple).");
			li36_nodes.forEach(detach_dev);
			ul16_nodes.forEach(detach_dev);
			li37_nodes.forEach(detach_dev);
			t181 = claim_space(ul23_nodes);
			li39 = claim_element(ul23_nodes, "LI", {});
			var li39_nodes = children(li39);
			t182 = claim_text(li39_nodes, "Ripple");
			ul17 = claim_element(li39_nodes, "UL", {});
			var ul17_nodes = children(ul17);
			li38 = claim_element(ul17_nodes, "LI", {});
			var li38_nodes = children(li38);
			a6 = claim_element(li38_nodes, "A", { href: true, rel: true });
			var a6_nodes = children(a6);
			t183 = claim_text(a6_nodes, "Ripple’s options");
			a6_nodes.forEach(detach_dev);
			t184 = claim_text(li38_nodes, " have changed considerably.");
			li38_nodes.forEach(detach_dev);
			ul17_nodes.forEach(detach_dev);
			li39_nodes.forEach(detach_dev);
			t185 = claim_space(ul23_nodes);
			li45 = claim_element(ul23_nodes, "LI", {});
			var li45_nodes = children(li45);
			t186 = claim_text(li45_nodes, "Select");
			ul18 = claim_element(li45_nodes, "UL", {});
			var ul18_nodes = children(ul18);
			li40 = claim_element(ul18_nodes, "LI", {});
			var li40_nodes = children(li40);
			t187 = claim_text(li40_nodes, "This is almost completely rewritten. You will need to migrate code for it. Check out the demo page.");
			li40_nodes.forEach(detach_dev);
			t188 = claim_space(ul18_nodes);
			li41 = claim_element(ul18_nodes, "LI", {});
			var li41_nodes = children(li41);
			t189 = claim_text(li41_nodes, "Helper Text in no longer a component. Instead, a ");
			code34 = claim_element(li41_nodes, "CODE", {});
			var code34_nodes = children(code34);
			t190 = claim_text(code34_nodes, "svelte:fragment");
			code34_nodes.forEach(detach_dev);
			t191 = claim_text(li41_nodes, " with text now goes inside the component in the “helper” slot. Its ID and ARIA attributes are set automatically.");
			li41_nodes.forEach(detach_dev);
			t192 = claim_space(ul18_nodes);
			li42 = claim_element(ul18_nodes, "LI", {});
			var li42_nodes = children(li42);
			t193 = claim_text(li42_nodes, "Removed ");
			code35 = claim_element(li42_nodes, "CODE", {});
			var code35_nodes = children(code35);
			t194 = claim_text(code35_nodes, "withLeadingIcon");
			code35_nodes.forEach(detach_dev);
			t195 = claim_text(li42_nodes, " and ");
			code36 = claim_element(li42_nodes, "CODE", {});
			var code36_nodes = children(code36);
			t196 = claim_text(code36_nodes, "selectedIndex");
			code36_nodes.forEach(detach_dev);
			t197 = claim_text(li42_nodes, " props.");
			li42_nodes.forEach(detach_dev);
			t198 = claim_space(ul18_nodes);
			li43 = claim_element(ul18_nodes, "LI", {});
			var li43_nodes = children(li43);
			t199 = claim_text(li43_nodes, "You no longer need ");
			code37 = claim_element(li43_nodes, "CODE", {});
			var code37_nodes = children(code37);
			t200 = claim_text(code37_nodes, "withLeadingIcon");
			code37_nodes.forEach(detach_dev);
			t201 = claim_text(li43_nodes, ". Instead, put Icon into the “leadingIcon” slot.");
			li43_nodes.forEach(detach_dev);
			t202 = claim_space(ul18_nodes);
			li44 = claim_element(ul18_nodes, "LI", {});
			var li44_nodes = children(li44);
			t203 = claim_text(li44_nodes, "You should now set ");
			code38 = claim_element(li44_nodes, "CODE", {});
			var code38_nodes = children(code38);
			t204 = claim_text(code38_nodes, "required");
			code38_nodes.forEach(detach_dev);
			t205 = claim_text(li44_nodes, " prop on the Select instead of ");
			code39 = claim_element(li44_nodes, "CODE", {});
			var code39_nodes = children(code39);
			t206 = claim_text(code39_nodes, "input$required");
			code39_nodes.forEach(detach_dev);
			t207 = claim_text(li44_nodes, ".");
			li44_nodes.forEach(detach_dev);
			ul18_nodes.forEach(detach_dev);
			li45_nodes.forEach(detach_dev);
			t208 = claim_space(ul23_nodes);
			li48 = claim_element(ul23_nodes, "LI", {});
			var li48_nodes = children(li48);
			t209 = claim_text(li48_nodes, "Slider");
			ul19 = claim_element(li48_nodes, "UL", {});
			var ul19_nodes = children(ul19);
			li46 = claim_element(ul19_nodes, "LI", {});
			var li46_nodes = children(li46);
			code40 = claim_element(li46_nodes, "CODE", {});
			var code40_nodes = children(code40);
			t210 = claim_text(code40_nodes, "displayMarkers");
			code40_nodes.forEach(detach_dev);
			t211 = claim_text(li46_nodes, " prop renamed to ");
			code41 = claim_element(li46_nodes, "CODE", {});
			var code41_nodes = children(code41);
			t212 = claim_text(code41_nodes, "tickMarks");
			code41_nodes.forEach(detach_dev);
			t213 = claim_text(li46_nodes, ".");
			li46_nodes.forEach(detach_dev);
			t214 = claim_space(ul19_nodes);
			li47 = claim_element(ul19_nodes, "LI", {});
			var li47_nodes = children(li47);
			code42 = claim_element(li47_nodes, "CODE", {});
			var code42_nodes = children(code42);
			t215 = claim_text(code42_nodes, "step");
			code42_nodes.forEach(detach_dev);
			t216 = claim_text(li47_nodes, " now defaults to 1 (same as the range HTML input).");
			li47_nodes.forEach(detach_dev);
			ul19_nodes.forEach(detach_dev);
			li48_nodes.forEach(detach_dev);
			t217 = claim_space(ul23_nodes);
			li50 = claim_element(ul23_nodes, "LI", {});
			var li50_nodes = children(li50);
			t218 = claim_text(li50_nodes, "Tab");
			ul20 = claim_element(li50_nodes, "UL", {});
			var ul20_nodes = children(ul20);
			li49 = claim_element(ul20_nodes, "LI", {});
			var li49_nodes = children(li49);
			t219 = claim_text(li49_nodes, "Removed ");
			code43 = claim_element(li49_nodes, "CODE", {});
			var code43_nodes = children(code43);
			t220 = claim_text(code43_nodes, "active");
			code43_nodes.forEach(detach_dev);
			t221 = claim_text(li49_nodes, " and ");
			code44 = claim_element(li49_nodes, "CODE", {});
			var code44_nodes = children(code44);
			t222 = claim_text(code44_nodes, "focusOnActivate");
			code44_nodes.forEach(detach_dev);
			t223 = claim_text(li49_nodes, " props. (No longer needed, since TabBar controls them.)");
			li49_nodes.forEach(detach_dev);
			ul20_nodes.forEach(detach_dev);
			li50_nodes.forEach(detach_dev);
			t224 = claim_space(ul23_nodes);
			li52 = claim_element(ul23_nodes, "LI", {});
			var li52_nodes = children(li52);
			t225 = claim_text(li52_nodes, "TabBar");
			ul21 = claim_element(li52_nodes, "UL", {});
			var ul21_nodes = children(ul21);
			li51 = claim_element(ul21_nodes, "LI", {});
			var li51_nodes = children(li51);
			t226 = claim_text(li51_nodes, "Removed ");
			code45 = claim_element(li51_nodes, "CODE", {});
			var code45_nodes = children(code45);
			t227 = claim_text(code45_nodes, "activeIndex");
			code45_nodes.forEach(detach_dev);
			t228 = claim_text(li51_nodes, " prop. ");
			code46 = claim_element(li51_nodes, "CODE", {});
			var code46_nodes = children(code46);
			t229 = claim_text(code46_nodes, "active");
			code46_nodes.forEach(detach_dev);
			t230 = claim_text(li51_nodes, " prop is now the only way to set the active tab, and it should be identical to one of the entries in ");
			code47 = claim_element(li51_nodes, "CODE", {});
			var code47_nodes = children(code47);
			t231 = claim_text(code47_nodes, "tabs");
			code47_nodes.forEach(detach_dev);
			t232 = claim_text(li51_nodes, " (pass objects by reference).");
			li51_nodes.forEach(detach_dev);
			ul21_nodes.forEach(detach_dev);
			li52_nodes.forEach(detach_dev);
			t233 = claim_space(ul23_nodes);
			li60 = claim_element(ul23_nodes, "LI", {});
			var li60_nodes = children(li60);
			t234 = claim_text(li60_nodes, "Textfield");
			ul22 = claim_element(li60_nodes, "UL", {});
			var ul22_nodes = children(ul22);
			li53 = claim_element(ul22_nodes, "LI", {});
			var li53_nodes = children(li53);
			t235 = claim_text(li53_nodes, "This is almost completely rewritten. You will need to migrate code for it. Check out the demo page.");
			li53_nodes.forEach(detach_dev);
			t236 = claim_space(ul22_nodes);
			li54 = claim_element(ul22_nodes, "LI", {});
			var li54_nodes = children(li54);
			t237 = claim_text(li54_nodes, "Helper Text and Character Counter now go inside the component in the “helper” slot. Their IDs and ARIA attributes are set automatically.");
			li54_nodes.forEach(detach_dev);
			t238 = claim_space(ul22_nodes);
			li55 = claim_element(ul22_nodes, "LI", {});
			var li55_nodes = children(li55);
			t239 = claim_text(li55_nodes, "Character Counter in a ");
			code48 = claim_element(li55_nodes, "CODE", {});
			var code48_nodes = children(code48);
			t240 = claim_text(code48_nodes, "textarea");
			code48_nodes.forEach(detach_dev);
			t241 = claim_text(li55_nodes, " Textfield goes in the “internalCounter” slot.");
			li55_nodes.forEach(detach_dev);
			t242 = claim_space(ul22_nodes);
			li56 = claim_element(ul22_nodes, "LI", {});
			var li56_nodes = children(li56);
			t243 = claim_text(li56_nodes, "Removed ");
			code49 = claim_element(li56_nodes, "CODE", {});
			var code49_nodes = children(code49);
			t244 = claim_text(code49_nodes, "fullwidth");
			code49_nodes.forEach(detach_dev);
			t245 = claim_text(li56_nodes, ", ");
			code50 = claim_element(li56_nodes, "CODE", {});
			var code50_nodes = children(code50);
			t246 = claim_text(code50_nodes, "dense");
			code50_nodes.forEach(detach_dev);
			t247 = claim_text(li56_nodes, ", ");
			code51 = claim_element(li56_nodes, "CODE", {});
			var code51_nodes = children(code51);
			t248 = claim_text(code51_nodes, "withLeadingIcon");
			code51_nodes.forEach(detach_dev);
			t249 = claim_text(li56_nodes, ", and ");
			code52 = claim_element(li56_nodes, "CODE", {});
			var code52_nodes = children(code52);
			t250 = claim_text(code52_nodes, "withTrailingIcon");
			code52_nodes.forEach(detach_dev);
			t251 = claim_text(li56_nodes, " props.");
			li56_nodes.forEach(detach_dev);
			t252 = claim_space(ul22_nodes);
			li57 = claim_element(ul22_nodes, "LI", {});
			var li57_nodes = children(li57);
			t253 = claim_text(li57_nodes, "You no longer need ");
			code53 = claim_element(li57_nodes, "CODE", {});
			var code53_nodes = children(code53);
			t254 = claim_text(code53_nodes, "withLeadingIcon");
			code53_nodes.forEach(detach_dev);
			t255 = claim_text(li57_nodes, " or ");
			code54 = claim_element(li57_nodes, "CODE", {});
			var code54_nodes = children(code54);
			t256 = claim_text(code54_nodes, "withTrailingIcon");
			code54_nodes.forEach(detach_dev);
			t257 = claim_text(li57_nodes, ". Instead, put Icons into the “leadingIcon” and “trailingIcon” slots.");
			li57_nodes.forEach(detach_dev);
			t258 = claim_space(ul22_nodes);
			li58 = claim_element(ul22_nodes, "LI", {});
			var li58_nodes = children(li58);
			t259 = claim_text(li58_nodes, "You should now set ");
			code55 = claim_element(li58_nodes, "CODE", {});
			var code55_nodes = children(code55);
			t260 = claim_text(code55_nodes, "required");
			code55_nodes.forEach(detach_dev);
			t261 = claim_text(li58_nodes, " prop on the Textfield instead of ");
			code56 = claim_element(li58_nodes, "CODE", {});
			var code56_nodes = children(code56);
			t262 = claim_text(code56_nodes, "input$required");
			code56_nodes.forEach(detach_dev);
			t263 = claim_text(li58_nodes, ".");
			li58_nodes.forEach(detach_dev);
			t264 = claim_space(ul22_nodes);
			li59 = claim_element(ul22_nodes, "LI", {});
			var li59_nodes = children(li59);
			t265 = claim_text(li59_nodes, "Manual setup now requires passing the sub-components into Textfield with ");
			code57 = claim_element(li59_nodes, "CODE", {});
			var code57_nodes = children(code57);
			t266 = claim_text(code57_nodes, "input");
			code57_nodes.forEach(detach_dev);
			t267 = claim_text(li59_nodes, ", ");
			code58 = claim_element(li59_nodes, "CODE", {});
			var code58_nodes = children(code58);
			t268 = claim_text(code58_nodes, "floatingLabel");
			code58_nodes.forEach(detach_dev);
			t269 = claim_text(li59_nodes, ", ");
			code59 = claim_element(li59_nodes, "CODE", {});
			var code59_nodes = children(code59);
			t270 = claim_text(code59_nodes, "lineRipple");
			code59_nodes.forEach(detach_dev);
			t271 = claim_text(li59_nodes, ", and ");
			code60 = claim_element(li59_nodes, "CODE", {});
			var code60_nodes = children(code60);
			t272 = claim_text(code60_nodes, "notchedOutline");
			code60_nodes.forEach(detach_dev);
			t273 = claim_text(li59_nodes, " props.");
			li59_nodes.forEach(detach_dev);
			ul22_nodes.forEach(detach_dev);
			li60_nodes.forEach(detach_dev);
			ul23_nodes.forEach(detach_dev);
			t274 = claim_space(nodes);
			h24 = claim_element(nodes, "H2", { id: true });
			var h24_nodes = children(h24);
			t275 = claim_text(h24_nodes, "New Features.");
			h24_nodes.forEach(detach_dev);
			t276 = claim_space(nodes);
			h34 = claim_element(nodes, "H3", { id: true });
			var h34_nodes = children(h34);
			t277 = claim_text(h34_nodes, "Theming, Sass");
			h34_nodes.forEach(detach_dev);
			t278 = claim_space(nodes);
			ul26 = claim_element(nodes, "UL", {});
			var ul26_nodes = children(ul26);
			li62 = claim_element(ul26_nodes, "LI", {});
			var li62_nodes = children(li62);
			t279 = claim_text(li62_nodes, "Paper");
			ul24 = claim_element(li62_nodes, "UL", {});
			var ul24_nodes = children(ul24);
			li61 = claim_element(ul24_nodes, "LI", {});
			var li61_nodes = children(li61);
			t280 = claim_text(li61_nodes, "New ");
			code61 = claim_element(li61_nodes, "CODE", {});
			var code61_nodes = children(code61);
			t281 = claim_text(code61_nodes, "paper-color");
			code61_nodes.forEach(detach_dev);
			t282 = claim_text(li61_nodes, " mixin.");
			li61_nodes.forEach(detach_dev);
			ul24_nodes.forEach(detach_dev);
			li62_nodes.forEach(detach_dev);
			t283 = claim_space(ul26_nodes);
			li64 = claim_element(ul26_nodes, "LI", {});
			var li64_nodes = children(li64);
			t284 = claim_text(li64_nodes, "Switch");
			ul25 = claim_element(li64_nodes, "UL", {});
			var ul25_nodes = children(ul25);
			li63 = claim_element(ul25_nodes, "LI", {});
			var li63_nodes = children(li63);
			t285 = claim_text(li63_nodes, "New ");
			code62 = claim_element(li63_nodes, "CODE", {});
			var code62_nodes = children(code62);
			t286 = claim_text(code62_nodes, "color");
			code62_nodes.forEach(detach_dev);
			t287 = claim_text(li63_nodes, " prop.");
			li63_nodes.forEach(detach_dev);
			ul25_nodes.forEach(detach_dev);
			li64_nodes.forEach(detach_dev);
			ul26_nodes.forEach(detach_dev);
			t288 = claim_space(nodes);
			h35 = claim_element(nodes, "H3", { id: true });
			var h35_nodes = children(h35);
			t289 = claim_text(h35_nodes, "Components");
			h35_nodes.forEach(detach_dev);
			t290 = claim_space(nodes);
			ul27 = claim_element(nodes, "UL", {});
			var ul27_nodes = children(ul27);
			li65 = claim_element(ul27_nodes, "LI", {});
			var li65_nodes = children(li65);
			t291 = claim_text(li65_nodes, "All components have a ");
			code63 = claim_element(li65_nodes, "CODE", {});
			var code63_nodes = children(code63);
			t292 = claim_text(code63_nodes, "getElement");
			code63_nodes.forEach(detach_dev);
			t293 = claim_text(li65_nodes, " function that will return their top level DOM element.");
			li65_nodes.forEach(detach_dev);
			t294 = claim_space(ul27_nodes);
			li66 = claim_element(ul27_nodes, "LI", {});
			var li66_nodes = children(li66);
			t295 = claim_text(li66_nodes, "All components now forward ");
			strong = claim_element(li66_nodes, "STRONG", {});
			var strong_nodes = children(strong);
			t296 = claim_text(strong_nodes, "all");
			strong_nodes.forEach(detach_dev);
			t297 = claim_text(li66_nodes, " events, and only listen for them if bounded.");
			li66_nodes.forEach(detach_dev);
			t298 = claim_space(ul27_nodes);
			li67 = claim_element(ul27_nodes, "LI", {});
			var li67_nodes = children(li67);
			t299 = claim_text(li67_nodes, "They can also take event modifiers with the ”:” syntax istead of ”|” (");
			code64 = claim_element(li67_nodes, "CODE", {});
			var code64_nodes = children(code64);
			t300 = claim_text(code64_nodes, "on:click:capture={handler}");
			code64_nodes.forEach(detach_dev);
			t301 = claim_text(li67_nodes, ").");
			li67_nodes.forEach(detach_dev);
			ul27_nodes.forEach(detach_dev);
			t302 = claim_space(nodes);
			p8 = claim_element(nodes, "P", {});
			var p8_nodes = children(p8);
			t303 = claim_text(p8_nodes, "New Components");
			p8_nodes.forEach(detach_dev);
			t304 = claim_space(nodes);
			ul28 = claim_element(nodes, "UL", {});
			var ul28_nodes = children(ul28);
			li68 = claim_element(ul28_nodes, "LI", {});
			var li68_nodes = children(li68);
			t305 = claim_text(li68_nodes, "Banners");
			li68_nodes.forEach(detach_dev);
			t306 = claim_space(ul28_nodes);
			li69 = claim_element(ul28_nodes, "LI", {});
			var li69_nodes = children(li69);
			t307 = claim_text(li69_nodes, "Circular Progress");
			li69_nodes.forEach(detach_dev);
			t308 = claim_space(ul28_nodes);
			li70 = claim_element(ul28_nodes, "LI", {});
			var li70_nodes = children(li70);
			t309 = claim_text(li70_nodes, "Layout Grids");
			li70_nodes.forEach(detach_dev);
			t310 = claim_space(ul28_nodes);
			li71 = claim_element(ul28_nodes, "LI", {});
			var li71_nodes = children(li71);
			t311 = claim_text(li71_nodes, "Segmented Buttons");
			li71_nodes.forEach(detach_dev);
			t312 = claim_space(ul28_nodes);
			li72 = claim_element(ul28_nodes, "LI", {});
			var li72_nodes = children(li72);
			t313 = claim_text(li72_nodes, "Tooltips");
			li72_nodes.forEach(detach_dev);
			t314 = claim_space(ul28_nodes);
			li73 = claim_element(ul28_nodes, "LI", {});
			var li73_nodes = children(li73);
			t315 = claim_text(li73_nodes, "Touch Target Wrappers");
			li73_nodes.forEach(detach_dev);
			ul28_nodes.forEach(detach_dev);
			t316 = claim_space(nodes);
			p9 = claim_element(nodes, "P", {});
			var p9_nodes = children(p9);
			t317 = claim_text(p9_nodes, "New Features in Existing Components");
			p9_nodes.forEach(detach_dev);
			t318 = claim_space(nodes);
			ul44 = claim_element(nodes, "UL", {});
			var ul44_nodes = children(ul44);
			li76 = claim_element(ul44_nodes, "LI", {});
			var li76_nodes = children(li76);
			t319 = claim_text(li76_nodes, "Chips");
			ul29 = claim_element(li76_nodes, "UL", {});
			var ul29_nodes = children(ul29);
			li74 = claim_element(ul29_nodes, "LI", {});
			var li74_nodes = children(li74);
			t320 = claim_text(li74_nodes, "New ");
			code65 = claim_element(li74_nodes, "CODE", {});
			var code65_nodes = children(code65);
			t321 = claim_text(code65_nodes, "nonInteractive");
			code65_nodes.forEach(detach_dev);
			t322 = claim_text(li74_nodes, " prop on Set.");
			li74_nodes.forEach(detach_dev);
			t323 = claim_space(ul29_nodes);
			li75 = claim_element(ul29_nodes, "LI", {});
			var li75_nodes = children(li75);
			t324 = claim_text(li75_nodes, "New ");
			code66 = claim_element(li75_nodes, "CODE", {});
			var code66_nodes = children(code66);
			t325 = claim_text(code66_nodes, "shouldFocusPrimaryActionOnClick");
			code66_nodes.forEach(detach_dev);
			t326 = claim_text(li75_nodes, " prop on Chip.");
			li75_nodes.forEach(detach_dev);
			ul29_nodes.forEach(detach_dev);
			li76_nodes.forEach(detach_dev);
			t327 = claim_space(ul44_nodes);
			li78 = claim_element(ul44_nodes, "LI", {});
			var li78_nodes = children(li78);
			t328 = claim_text(li78_nodes, "Common");
			ul30 = claim_element(li78_nodes, "UL", {});
			var ul30_nodes = children(ul30);
			li77 = claim_element(ul30_nodes, "LI", {});
			var li77_nodes = children(li77);
			t329 = claim_text(li77_nodes, "Icon now takes a ");
			code67 = claim_element(li77_nodes, "CODE", {});
			var code67_nodes = children(code67);
			t330 = claim_text(code67_nodes, "component");
			code67_nodes.forEach(detach_dev);
			t331 = claim_text(li77_nodes, " prop.");
			li77_nodes.forEach(detach_dev);
			ul30_nodes.forEach(detach_dev);
			li78_nodes.forEach(detach_dev);
			t332 = claim_space(ul44_nodes);
			li85 = claim_element(ul44_nodes, "LI", {});
			var li85_nodes = children(li85);
			t333 = claim_text(li85_nodes, "Data Table");
			ul31 = claim_element(li85_nodes, "UL", {});
			var ul31_nodes = children(ul31);
			li79 = claim_element(ul31_nodes, "LI", {});
			var li79_nodes = children(li79);
			t334 = claim_text(li79_nodes, "New ");
			code68 = claim_element(li79_nodes, "CODE", {});
			var code68_nodes = children(code68);
			t335 = claim_text(code68_nodes, "stickyHeader");
			code68_nodes.forEach(detach_dev);
			t336 = claim_text(li79_nodes, " prop.");
			li79_nodes.forEach(detach_dev);
			t337 = claim_space(ul31_nodes);
			li80 = claim_element(ul31_nodes, "LI", {});
			var li80_nodes = children(li80);
			t338 = claim_text(li80_nodes, "New ");
			code69 = claim_element(li80_nodes, "CODE", {});
			var code69_nodes = children(code69);
			t339 = claim_text(code69_nodes, "columnId");
			code69_nodes.forEach(detach_dev);
			t340 = claim_text(li80_nodes, " prop on Cell (defaults to an automatic ID).");
			li80_nodes.forEach(detach_dev);
			t341 = claim_space(ul31_nodes);
			li81 = claim_element(ul31_nodes, "LI", {});
			var li81_nodes = children(li81);
			t342 = claim_text(li81_nodes, "New ");
			code70 = claim_element(li81_nodes, "CODE", {});
			var code70_nodes = children(code70);
			t343 = claim_text(code70_nodes, "rowId");
			code70_nodes.forEach(detach_dev);
			t344 = claim_text(li81_nodes, " prop on Row (defaults to an automatic ID).");
			li81_nodes.forEach(detach_dev);
			t345 = claim_space(ul31_nodes);
			li82 = claim_element(ul31_nodes, "LI", {});
			var li82_nodes = children(li82);
			t346 = claim_text(li82_nodes, "Pagination");
			li82_nodes.forEach(detach_dev);
			t347 = claim_space(ul31_nodes);
			li83 = claim_element(ul31_nodes, "LI", {});
			var li83_nodes = children(li83);
			t348 = claim_text(li83_nodes, "Progress Indicator");
			li83_nodes.forEach(detach_dev);
			t349 = claim_space(ul31_nodes);
			li84 = claim_element(ul31_nodes, "LI", {});
			var li84_nodes = children(li84);
			t350 = claim_text(li84_nodes, "Column Sort Buttons");
			li84_nodes.forEach(detach_dev);
			ul31_nodes.forEach(detach_dev);
			li85_nodes.forEach(detach_dev);
			t351 = claim_space(ul44_nodes);
			li87 = claim_element(ul44_nodes, "LI", {});
			var li87_nodes = children(li87);
			t352 = claim_text(li87_nodes, "Dialog");
			ul32 = claim_element(li87_nodes, "UL", {});
			var ul32_nodes = children(ul32);
			li86 = claim_element(ul32_nodes, "LI", {});
			var li86_nodes = children(li86);
			t353 = claim_text(li86_nodes, "New ");
			code71 = claim_element(li86_nodes, "CODE", {});
			var code71_nodes = children(code71);
			t354 = claim_text(code71_nodes, "selection");
			code71_nodes.forEach(detach_dev);
			t355 = claim_text(li86_nodes, " prop.");
			li86_nodes.forEach(detach_dev);
			ul32_nodes.forEach(detach_dev);
			li87_nodes.forEach(detach_dev);
			t356 = claim_space(ul44_nodes);
			li90 = claim_element(ul44_nodes, "LI", {});
			var li90_nodes = children(li90);
			t357 = claim_text(li90_nodes, "Drawer");
			ul33 = claim_element(li90_nodes, "UL", {});
			var ul33_nodes = children(ul33);
			li88 = claim_element(ul33_nodes, "LI", {});
			var li88_nodes = children(li88);
			t358 = claim_text(li88_nodes, "New ");
			code72 = claim_element(li88_nodes, "CODE", {});
			var code72_nodes = children(code72);
			t359 = claim_text(code72_nodes, "fixed");
			code72_nodes.forEach(detach_dev);
			t360 = claim_text(li88_nodes, " prop (defaults to true).");
			li88_nodes.forEach(detach_dev);
			t361 = claim_space(ul33_nodes);
			li89 = claim_element(ul33_nodes, "LI", {});
			var li89_nodes = children(li89);
			t362 = claim_text(li89_nodes, "New ");
			code73 = claim_element(li89_nodes, "CODE", {});
			var code73_nodes = children(code73);
			t363 = claim_text(code73_nodes, "isOpen");
			code73_nodes.forEach(detach_dev);
			t364 = claim_text(li89_nodes, " function.");
			li89_nodes.forEach(detach_dev);
			ul33_nodes.forEach(detach_dev);
			li90_nodes.forEach(detach_dev);
			t365 = claim_space(ul44_nodes);
			li92 = claim_element(ul44_nodes, "LI", {});
			var li92_nodes = children(li92);
			t366 = claim_text(li92_nodes, "FAB");
			ul34 = claim_element(li92_nodes, "UL", {});
			var ul34_nodes = children(ul34);
			li91 = claim_element(ul34_nodes, "LI", {});
			var li91_nodes = children(li91);
			t367 = claim_text(li91_nodes, "New ");
			code74 = claim_element(li91_nodes, "CODE", {});
			var code74_nodes = children(code74);
			t368 = claim_text(code74_nodes, "touch");
			code74_nodes.forEach(detach_dev);
			t369 = claim_text(li91_nodes, " prop.");
			li91_nodes.forEach(detach_dev);
			ul34_nodes.forEach(detach_dev);
			li92_nodes.forEach(detach_dev);
			t370 = claim_space(ul44_nodes);
			li94 = claim_element(ul44_nodes, "LI", {});
			var li94_nodes = children(li94);
			t371 = claim_text(li94_nodes, "Form Field");
			ul35 = claim_element(li94_nodes, "UL", {});
			var ul35_nodes = children(ul35);
			li93 = claim_element(ul35_nodes, "LI", {});
			var li93_nodes = children(li93);
			t372 = claim_text(li93_nodes, "New ");
			code75 = claim_element(li93_nodes, "CODE", {});
			var code75_nodes = children(code75);
			t373 = claim_text(code75_nodes, "noWrap");
			code75_nodes.forEach(detach_dev);
			t374 = claim_text(li93_nodes, " prop.");
			li93_nodes.forEach(detach_dev);
			ul35_nodes.forEach(detach_dev);
			li94_nodes.forEach(detach_dev);
			t375 = claim_space(ul44_nodes);
			li96 = claim_element(ul44_nodes, "LI", {});
			var li96_nodes = children(li96);
			t376 = claim_text(li96_nodes, "Icon Button");
			ul36 = claim_element(li96_nodes, "UL", {});
			var ul36_nodes = children(ul36);
			li95 = claim_element(ul36_nodes, "LI", {});
			var li95_nodes = children(li95);
			t377 = claim_text(li95_nodes, "New ");
			code76 = claim_element(li95_nodes, "CODE", {});
			var code76_nodes = children(code76);
			t378 = claim_text(code76_nodes, "ariaLabelOn");
			code76_nodes.forEach(detach_dev);
			t379 = claim_text(li95_nodes, " and ");
			code77 = claim_element(li95_nodes, "CODE", {});
			var code77_nodes = children(code77);
			t380 = claim_text(code77_nodes, "ariaLabelOff");
			code77_nodes.forEach(detach_dev);
			t381 = claim_text(li95_nodes, " props for toggle buttons.");
			li95_nodes.forEach(detach_dev);
			ul36_nodes.forEach(detach_dev);
			li96_nodes.forEach(detach_dev);
			t382 = claim_space(ul44_nodes);
			li100 = claim_element(ul44_nodes, "LI", {});
			var li100_nodes = children(li100);
			t383 = claim_text(li100_nodes, "Menu");
			ul37 = claim_element(li100_nodes, "UL", {});
			var ul37_nodes = children(ul37);
			li97 = claim_element(ul37_nodes, "LI", {});
			var li97_nodes = children(li97);
			t384 = claim_text(li97_nodes, "New ");
			code78 = claim_element(li97_nodes, "CODE", {});
			var code78_nodes = children(code78);
			t385 = claim_text(code78_nodes, "isOpen");
			code78_nodes.forEach(detach_dev);
			t386 = claim_text(li97_nodes, " function.");
			li97_nodes.forEach(detach_dev);
			t387 = claim_space(ul37_nodes);
			li98 = claim_element(ul37_nodes, "LI", {});
			var li98_nodes = children(li98);
			t388 = claim_text(li98_nodes, "New ");
			code79 = claim_element(li98_nodes, "CODE", {});
			var code79_nodes = children(code79);
			t389 = claim_text(code79_nodes, "setOpen");
			code79_nodes.forEach(detach_dev);
			t390 = claim_text(li98_nodes, " function.");
			li98_nodes.forEach(detach_dev);
			t391 = claim_space(ul37_nodes);
			li99 = claim_element(ul37_nodes, "LI", {});
			var li99_nodes = children(li99);
			t392 = claim_text(li99_nodes, "New ");
			code80 = claim_element(li99_nodes, "CODE", {});
			var code80_nodes = children(code80);
			t393 = claim_text(code80_nodes, "setDefaultFocusState");
			code80_nodes.forEach(detach_dev);
			t394 = claim_text(li99_nodes, " function.");
			li99_nodes.forEach(detach_dev);
			ul37_nodes.forEach(detach_dev);
			li100_nodes.forEach(detach_dev);
			t395 = claim_space(ul44_nodes);
			li104 = claim_element(ul44_nodes, "LI", {});
			var li104_nodes = children(li104);
			t396 = claim_text(li104_nodes, "Menu Surface");
			ul38 = claim_element(li104_nodes, "UL", {});
			var ul38_nodes = children(ul38);
			li101 = claim_element(ul38_nodes, "LI", {});
			var li101_nodes = children(li101);
			t397 = claim_text(li101_nodes, "New ");
			code81 = claim_element(li101_nodes, "CODE", {});
			var code81_nodes = children(code81);
			t398 = claim_text(code81_nodes, "fullWidth");
			code81_nodes.forEach(detach_dev);
			t399 = claim_text(li101_nodes, " prop.");
			li101_nodes.forEach(detach_dev);
			t400 = claim_space(ul38_nodes);
			li102 = claim_element(ul38_nodes, "LI", {});
			var li102_nodes = children(li102);
			t401 = claim_text(li102_nodes, "New ");
			code82 = claim_element(li102_nodes, "CODE", {});
			var code82_nodes = children(code82);
			t402 = claim_text(code82_nodes, "anchorMargin");
			code82_nodes.forEach(detach_dev);
			t403 = claim_text(li102_nodes, " prop.");
			li102_nodes.forEach(detach_dev);
			t404 = claim_space(ul38_nodes);
			li103 = claim_element(ul38_nodes, "LI", {});
			var li103_nodes = children(li103);
			t405 = claim_text(li103_nodes, "New ");
			code83 = claim_element(li103_nodes, "CODE", {});
			var code83_nodes = children(code83);
			t406 = claim_text(code83_nodes, "MDCMenuSurface:closing");
			code83_nodes.forEach(detach_dev);
			t407 = claim_text(li103_nodes, " event.");
			li103_nodes.forEach(detach_dev);
			ul38_nodes.forEach(detach_dev);
			li104_nodes.forEach(detach_dev);
			t408 = claim_space(ul44_nodes);
			li107 = claim_element(ul44_nodes, "LI", {});
			var li107_nodes = children(li107);
			t409 = claim_text(li107_nodes, "Select");
			ul39 = claim_element(li107_nodes, "UL", {});
			var ul39_nodes = children(ul39);
			li105 = claim_element(ul39_nodes, "LI", {});
			var li105_nodes = children(li105);
			t410 = claim_text(li105_nodes, "New ");
			code84 = claim_element(li105_nodes, "CODE", {});
			var code84_nodes = children(code84);
			t411 = claim_text(code84_nodes, "hiddenInput");
			code84_nodes.forEach(detach_dev);
			t412 = claim_text(li105_nodes, " prop.");
			li105_nodes.forEach(detach_dev);
			t413 = claim_space(ul39_nodes);
			li106 = claim_element(ul39_nodes, "LI", {});
			var li106_nodes = children(li106);
			t414 = claim_text(li106_nodes, "New ");
			code85 = claim_element(li106_nodes, "CODE", {});
			var code85_nodes = children(code85);
			t415 = claim_text(code85_nodes, "key");
			code85_nodes.forEach(detach_dev);
			t416 = claim_text(li106_nodes, " prop for using objects as options.");
			li106_nodes.forEach(detach_dev);
			ul39_nodes.forEach(detach_dev);
			li107_nodes.forEach(detach_dev);
			t417 = claim_space(ul44_nodes);
			li110 = claim_element(ul44_nodes, "LI", {});
			var li110_nodes = children(li110);
			t418 = claim_text(li110_nodes, "Slider");
			ul40 = claim_element(li110_nodes, "UL", {});
			var ul40_nodes = children(ul40);
			li108 = claim_element(ul40_nodes, "LI", {});
			var li108_nodes = children(li108);
			t419 = claim_text(li108_nodes, "New ");
			code86 = claim_element(li108_nodes, "CODE", {});
			var code86_nodes = children(code86);
			t420 = claim_text(code86_nodes, "range");
			code86_nodes.forEach(detach_dev);
			t421 = claim_text(li108_nodes, ", ");
			code87 = claim_element(li108_nodes, "CODE", {});
			var code87_nodes = children(code87);
			t422 = claim_text(code87_nodes, "start");
			code87_nodes.forEach(detach_dev);
			t423 = claim_text(li108_nodes, ", ");
			code88 = claim_element(li108_nodes, "CODE", {});
			var code88_nodes = children(code88);
			t424 = claim_text(code88_nodes, "end");
			code88_nodes.forEach(detach_dev);
			t425 = claim_text(li108_nodes, " props for range sliders.");
			li108_nodes.forEach(detach_dev);
			t426 = claim_space(ul40_nodes);
			li109 = claim_element(ul40_nodes, "LI", {});
			var li109_nodes = children(li109);
			t427 = claim_text(li109_nodes, "New ");
			code89 = claim_element(li109_nodes, "CODE", {});
			var code89_nodes = children(code89);
			t428 = claim_text(code89_nodes, "valueToAriaValueTextFn");
			code89_nodes.forEach(detach_dev);
			t429 = claim_text(li109_nodes, " prop for updating the ARIA value attribute.");
			li109_nodes.forEach(detach_dev);
			ul40_nodes.forEach(detach_dev);
			li110_nodes.forEach(detach_dev);
			t430 = claim_space(ul44_nodes);
			li112 = claim_element(ul44_nodes, "LI", {});
			var li112_nodes = children(li112);
			t431 = claim_text(li112_nodes, "TabBar");
			ul41 = claim_element(li112_nodes, "UL", {});
			var ul41_nodes = children(ul41);
			li111 = claim_element(ul41_nodes, "LI", {});
			var li111_nodes = children(li111);
			t432 = claim_text(li111_nodes, "New ");
			code90 = claim_element(li111_nodes, "CODE", {});
			var code90_nodes = children(code90);
			t433 = claim_text(code90_nodes, "tabScroller$align");
			code90_nodes.forEach(detach_dev);
			t434 = claim_text(li111_nodes, " prop.");
			li111_nodes.forEach(detach_dev);
			ul41_nodes.forEach(detach_dev);
			li112_nodes.forEach(detach_dev);
			t435 = claim_space(ul44_nodes);
			li117 = claim_element(ul44_nodes, "LI", {});
			var li117_nodes = children(li117);
			t436 = claim_text(li117_nodes, "Textfield");
			ul42 = claim_element(li117_nodes, "UL", {});
			var ul42_nodes = children(ul42);
			li113 = claim_element(ul42_nodes, "LI", {});
			var li113_nodes = children(li113);
			t437 = claim_text(li113_nodes, "New ");
			code91 = claim_element(li113_nodes, "CODE", {});
			var code91_nodes = children(code91);
			t438 = claim_text(code91_nodes, "prefix");
			code91_nodes.forEach(detach_dev);
			t439 = claim_text(li113_nodes, " and ");
			code92 = claim_element(li113_nodes, "CODE", {});
			var code92_nodes = children(code92);
			t440 = claim_text(code92_nodes, "suffix");
			code92_nodes.forEach(detach_dev);
			t441 = claim_text(li113_nodes, " props.");
			li113_nodes.forEach(detach_dev);
			t442 = claim_space(ul42_nodes);
			li114 = claim_element(ul42_nodes, "LI", {});
			var li114_nodes = children(li114);
			t443 = claim_text(li114_nodes, "New ");
			code93 = claim_element(li114_nodes, "CODE", {});
			var code93_nodes = children(code93);
			t444 = claim_text(code93_nodes, "validateOnValueChange");
			code93_nodes.forEach(detach_dev);
			t445 = claim_text(li114_nodes, " prop.");
			li114_nodes.forEach(detach_dev);
			t446 = claim_space(ul42_nodes);
			li115 = claim_element(ul42_nodes, "LI", {});
			var li115_nodes = children(li115);
			t447 = claim_text(li115_nodes, "New ");
			code94 = claim_element(li115_nodes, "CODE", {});
			var code94_nodes = children(code94);
			t448 = claim_text(code94_nodes, "input$resizable={false}");
			code94_nodes.forEach(detach_dev);
			t449 = claim_text(li115_nodes, " prop to disable textarea resizing.");
			li115_nodes.forEach(detach_dev);
			t450 = claim_space(ul42_nodes);
			li116 = claim_element(ul42_nodes, "LI", {});
			var li116_nodes = children(li116);
			t451 = claim_text(li116_nodes, "New ");
			code95 = claim_element(li116_nodes, "CODE", {});
			var code95_nodes = children(code95);
			t452 = claim_text(code95_nodes, "helperLine$");
			code95_nodes.forEach(detach_dev);
			t453 = claim_text(li116_nodes, " ”$” props passed to the helper line.");
			li116_nodes.forEach(detach_dev);
			ul42_nodes.forEach(detach_dev);
			li117_nodes.forEach(detach_dev);
			t454 = claim_space(ul44_nodes);
			li119 = claim_element(ul44_nodes, "LI", {});
			var li119_nodes = children(li119);
			t455 = claim_text(li119_nodes, "Top App Bar");
			ul43 = claim_element(li119_nodes, "UL", {});
			var ul43_nodes = children(ul43);
			li118 = claim_element(ul43_nodes, "LI", {});
			var li118_nodes = children(li118);
			t456 = claim_text(li118_nodes, "New ");
			code96 = claim_element(li118_nodes, "CODE", {});
			var code96_nodes = children(code96);
			t457 = claim_text(code96_nodes, "scrollTarget");
			code96_nodes.forEach(detach_dev);
			t458 = claim_text(li118_nodes, " prop.");
			li118_nodes.forEach(detach_dev);
			ul43_nodes.forEach(detach_dev);
			li119_nodes.forEach(detach_dev);
			ul44_nodes.forEach(detach_dev);
			t459 = claim_space(nodes);
			p10 = claim_element(nodes, "P", {});
			var p10_nodes = children(p10);
			t460 = claim_text(p10_nodes, "If you have trouble upgrading with these instructions, you can raise an issue on GitHub.");
			p10_nodes.forEach(detach_dev);
			t461 = claim_space(nodes);
			h15 = claim_element(nodes, "H1", { id: true });
			var h15_nodes = children(h15);
			t462 = claim_text(h15_nodes, "SMUI 1 -> SMUI 2");
			h15_nodes.forEach(detach_dev);
			t463 = claim_space(nodes);
			p11 = claim_element(nodes, "P", {});
			var p11_nodes = children(p11);
			t464 = claim_text(p11_nodes, "SMUI 2 migrated to upstream MDC 4.0 from 3.0:\n");
			a7 = claim_element(p11_nodes, "A", { href: true, rel: true });
			var a7_nodes = children(a7);
			t465 = claim_text(a7_nodes, "https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#400-2019-11-02-1");
			a7_nodes.forEach(detach_dev);
			p11_nodes.forEach(detach_dev);
			t466 = claim_space(nodes);
			ul49 = claim_element(nodes, "UL", {});
			var ul49_nodes = children(ul49);
			li124 = claim_element(ul49_nodes, "LI", {});
			var li124_nodes = children(li124);
			t467 = claim_text(li124_nodes, "Chips");
			ul45 = claim_element(li124_nodes, "UL", {});
			var ul45_nodes = children(ul45);
			li120 = claim_element(ul45_nodes, "LI", {});
			var li120_nodes = children(li120);
			t468 = claim_text(li120_nodes, "Text component is now required.");
			li120_nodes.forEach(detach_dev);
			t469 = claim_space(ul45_nodes);
			li121 = claim_element(ul45_nodes, "LI", {});
			var li121_nodes = children(li121);
			t470 = claim_text(li121_nodes, "Now use their own Text and Icon components. The common ones will not work.");
			li121_nodes.forEach(detach_dev);
			t471 = claim_space(ul45_nodes);
			li122 = claim_element(ul45_nodes, "LI", {});
			var li122_nodes = children(li122);
			t472 = claim_text(li122_nodes, "Icon no longer requires ");
			code97 = claim_element(li122_nodes, "CODE", {});
			var code97_nodes = children(code97);
			t473 = claim_text(code97_nodes, "trailing");
			code97_nodes.forEach(detach_dev);
			t474 = claim_text(li122_nodes, " prop. That is the default.");
			li122_nodes.forEach(detach_dev);
			t475 = claim_space(ul45_nodes);
			li123 = claim_element(ul45_nodes, "LI", {});
			var li123_nodes = children(li123);
			t476 = claim_text(li123_nodes, "Checkmark component is no longer required. It is added automatically.");
			li123_nodes.forEach(detach_dev);
			ul45_nodes.forEach(detach_dev);
			li124_nodes.forEach(detach_dev);
			t477 = claim_space(ul49_nodes);
			li126 = claim_element(ul49_nodes, "LI", {});
			var li126_nodes = children(li126);
			t478 = claim_text(li126_nodes, "Menu and Menu Surface");
			ul46 = claim_element(li126_nodes, "UL", {});
			var ul46_nodes = children(ul46);
			li125 = claim_element(ul46_nodes, "LI", {});
			var li125_nodes = children(li125);
			t479 = claim_text(li125_nodes, "hoistMenuToBody function removed.");
			li125_nodes.forEach(detach_dev);
			ul46_nodes.forEach(detach_dev);
			li126_nodes.forEach(detach_dev);
			t480 = claim_space(ul49_nodes);
			li130 = claim_element(ul49_nodes, "LI", {});
			var li130_nodes = children(li130);
			t481 = claim_text(li130_nodes, "Select");
			ul47 = claim_element(li130_nodes, "UL", {});
			var ul47_nodes = children(ul47);
			li127 = claim_element(ul47_nodes, "LI", {});
			var li127_nodes = children(li127);
			code98 = claim_element(li127_nodes, "CODE", {});
			var code98_nodes = children(code98);
			t482 = claim_text(code98_nodes, "enchanced");
			code98_nodes.forEach(detach_dev);
			t483 = claim_text(li127_nodes, " prop is removed. All selects are enhanced now.");
			li127_nodes.forEach(detach_dev);
			t484 = claim_space(ul47_nodes);
			li128 = claim_element(ul47_nodes, "LI", {});
			var li128_nodes = children(li128);
			code99 = claim_element(li128_nodes, "CODE", {});
			var code99_nodes = children(code99);
			t485 = claim_text(code99_nodes, "selected");
			code99_nodes.forEach(detach_dev);
			t486 = claim_text(li128_nodes, " prop on Option is no longer required and probably should not be used.");
			li128_nodes.forEach(detach_dev);
			t487 = claim_space(ul47_nodes);
			li129 = claim_element(ul47_nodes, "LI", {});
			var li129_nodes = children(li129);
			t488 = claim_text(li129_nodes, "You now need to pass a class into ");
			code100 = claim_element(li129_nodes, "CODE", {});
			var code100_nodes = children(code100);
			t489 = claim_text(code100_nodes, "anchor$class");
			code100_nodes.forEach(detach_dev);
			t490 = claim_text(li129_nodes, " and ");
			code101 = claim_element(li129_nodes, "CODE", {});
			var code101_nodes = children(code101);
			t491 = claim_text(code101_nodes, "menu$class");
			code101_nodes.forEach(detach_dev);
			t492 = claim_text(li129_nodes, " with a width value set.");
			li129_nodes.forEach(detach_dev);
			ul47_nodes.forEach(detach_dev);
			li130_nodes.forEach(detach_dev);
			t493 = claim_space(ul49_nodes);
			li132 = claim_element(ul49_nodes, "LI", {});
			var li132_nodes = children(li132);
			t494 = claim_text(li132_nodes, "Button");
			ul48 = claim_element(li132_nodes, "UL", {});
			var ul48_nodes = children(ul48);
			li131 = claim_element(ul48_nodes, "LI", {});
			var li131_nodes = children(li131);
			t495 = claim_text(li131_nodes, "No longer has a ");
			code102 = claim_element(li131_nodes, "CODE", {});
			var code102_nodes = children(code102);
			t496 = claim_text(code102_nodes, "dense");
			code102_nodes.forEach(detach_dev);
			t497 = claim_text(li131_nodes, " prop. Use the mixin from MDC.");
			li131_nodes.forEach(detach_dev);
			ul48_nodes.forEach(detach_dev);
			li132_nodes.forEach(detach_dev);
			ul49_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h10, "id", "migrating-to-newer-smui-versions");
			add_location(h10, file$1, 1, 0, 1);
			add_location(p0, file$1, 2, 0, 81);
			attr_dev(h11, "id", "smui-40---smui-41");
			add_location(h11, file$1, 3, 0, 397);
			add_location(code0, file$1, 5, 60, 515);
			add_location(li0, file$1, 6, 0, 637);
			add_location(ul0, file$1, 5, 177, 632);
			add_location(li1, file$1, 5, 0, 455);
			add_location(ul1, file$1, 4, 0, 450);
			attr_dev(h12, "id", "smui-3---smui-4");
			add_location(h12, file$1, 9, 0, 743);
			attr_dev(h20, "id", "breaking-changes");
			add_location(h20, file$1, 10, 0, 790);
			add_location(p1, file$1, 11, 0, 838);
			attr_dev(a0, "href", "https://github.com/hperrin/svelte-material-ui/tree/master/packages/smui-theme");
			attr_dev(a0, "rel", "nofollow");
			add_location(a0, file$1, 12, 21, 1096);
			add_location(p2, file$1, 12, 0, 1075);
			attr_dev(h13, "id", "smui-30---smui-31");
			add_location(h13, file$1, 16, 0, 1266);
			attr_dev(a1, "href", "https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#1100-2021-04-15");
			attr_dev(a1, "rel", "nofollow");
			add_location(a1, file$1, 18, 0, 1372);
			add_location(p3, file$1, 17, 0, 1319);
			add_location(p4, file$1, 22, 0, 1618);
			attr_dev(h21, "id", "breaking-changes-1");
			add_location(h21, file$1, 23, 0, 1682);
			attr_dev(h30, "id", "theming-sass");
			add_location(h30, file$1, 24, 0, 1732);
			add_location(li2, file$1, 26, 0, 1778);
			add_location(li3, file$1, 27, 0, 1833);
			add_location(ul2, file$1, 25, 0, 1773);
			attr_dev(h22, "id", "new-features");
			add_location(h22, file$1, 29, 0, 1878);
			attr_dev(h31, "id", "compoennts");
			add_location(h31, file$1, 30, 0, 1918);
			add_location(li4, file$1, 33, 0, 1974);
			add_location(ul3, file$1, 32, 10, 1969);
			add_location(li5, file$1, 32, 0, 1959);
			add_location(code1, file$1, 36, 8, 2047);
			add_location(li6, file$1, 36, 0, 2039);
			add_location(code2, file$1, 37, 8, 2090);
			add_location(li7, file$1, 37, 0, 2082);
			add_location(ul4, file$1, 35, 10, 2034);
			add_location(li8, file$1, 35, 0, 2024);
			add_location(code3, file$1, 40, 8, 2159);
			add_location(li9, file$1, 40, 0, 2151);
			add_location(code4, file$1, 41, 8, 2201);
			add_location(li10, file$1, 41, 0, 2193);
			add_location(ul5, file$1, 39, 16, 2146);
			add_location(li11, file$1, 39, 0, 2130);
			add_location(code5, file$1, 44, 53, 2335);
			add_location(li12, file$1, 44, 0, 2282);
			add_location(ul6, file$1, 43, 10, 2277);
			add_location(li13, file$1, 43, 0, 2267);
			add_location(code6, file$1, 47, 8, 2399);
			add_location(code7, file$1, 47, 45, 2436);
			add_location(li14, file$1, 47, 0, 2391);
			add_location(ul7, file$1, 46, 11, 2386);
			add_location(li15, file$1, 46, 0, 2375);
			add_location(ul8, file$1, 31, 0, 1954);
			attr_dev(h14, "id", "smui-2---smui-3");
			add_location(h14, file$1, 50, 0, 2578);
			add_location(code8, file$1, 51, 42, 2667);
			add_location(p5, file$1, 51, 0, 2625);
			attr_dev(pre, "class", "language-sh");
			add_location(pre, file$1, 52, 0, 2755);
			attr_dev(a2, "href", "https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#1000-2021-02-05");
			attr_dev(a2, "rel", "nofollow");
			add_location(a2, file$1, 55, 0, 2913);
			add_location(p6, file$1, 54, 0, 2863);
			attr_dev(a3, "href", "SAPPER.md");
			add_location(a3, file$1, 59, 13, 3172);
			add_location(p7, file$1, 59, 0, 3159);
			attr_dev(h23, "id", "breaking-changes-2");
			add_location(h23, file$1, 60, 0, 3253);
			attr_dev(h32, "id", "theming-sass-1");
			add_location(h32, file$1, 61, 0, 3303);
			add_location(li16, file$1, 63, 0, 3351);
			attr_dev(a4, "href", "THEMING.md");
			add_location(a4, file$1, 64, 87, 3586);
			add_location(li17, file$1, 64, 0, 3499);
			add_location(ul9, file$1, 62, 0, 3346);
			attr_dev(h33, "id", "components");
			add_location(h33, file$1, 66, 0, 3634);
			add_location(code9, file$1, 69, 24, 3713);
			add_location(code10, file$1, 69, 86, 3775);
			add_location(li18, file$1, 69, 0, 3689);
			add_location(li19, file$1, 70, 0, 3811);
			add_location(code11, file$1, 71, 12, 3913);
			add_location(code12, file$1, 71, 48, 3949);
			add_location(code13, file$1, 71, 195, 4096);
			add_location(li20, file$1, 71, 0, 3901);
			add_location(code14, file$1, 72, 22, 4171);
			add_location(li21, file$1, 72, 0, 4149);
			add_location(code15, file$1, 73, 27, 4308);
			add_location(li22, file$1, 73, 0, 4281);
			add_location(ul10, file$1, 68, 9, 3684);
			add_location(li23, file$1, 68, 0, 3675);
			add_location(code16, file$1, 76, 4, 4407);
			add_location(li24, file$1, 76, 0, 4403);
			add_location(ul11, file$1, 75, 14, 4398);
			add_location(li25, file$1, 75, 0, 4384);
			add_location(code17, file$1, 79, 38, 4548);
			add_location(code18, file$1, 79, 73, 4583);
			add_location(code19, file$1, 79, 95, 4605);
			add_location(code20, file$1, 79, 140, 4650);
			add_location(code21, file$1, 79, 164, 4674);
			add_location(li26, file$1, 79, 0, 4510);
			add_location(code22, file$1, 80, 37, 4748);
			add_location(code23, file$1, 80, 89, 4800);
			add_location(code24, file$1, 80, 160, 4871);
			add_location(li27, file$1, 80, 0, 4711);
			attr_dev(a5, "href", "https://sveltematerialui.com/demo/dialog/");
			attr_dev(a5, "rel", "nofollow");
			add_location(a5, file$1, 81, 57, 4976);
			add_location(li28, file$1, 81, 0, 4919);
			add_location(ul12, file$1, 78, 10, 4505);
			add_location(li29, file$1, 78, 0, 4495);
			add_location(code25, file$1, 87, 66, 5160);
			add_location(li30, file$1, 87, 0, 5094);
			add_location(ul13, file$1, 86, 15, 5089);
			add_location(li31, file$1, 86, 0, 5074);
			add_location(code26, file$1, 90, 12, 5271);
			add_location(li32, file$1, 90, 0, 5259);
			add_location(ul14, file$1, 89, 19, 5254);
			add_location(li33, file$1, 89, 0, 5235);
			add_location(code27, file$1, 93, 4, 5332);
			add_location(code28, file$1, 93, 31, 5359);
			add_location(code29, file$1, 93, 71, 5399);
			add_location(code30, file$1, 93, 98, 5426);
			add_location(li34, file$1, 93, 0, 5328);
			add_location(ul15, file$1, 92, 8, 5323);
			add_location(li35, file$1, 92, 0, 5315);
			add_location(code31, file$1, 96, 28, 5515);
			add_location(code32, file$1, 96, 54, 5541);
			add_location(code33, file$1, 96, 90, 5577);
			add_location(li36, file$1, 96, 0, 5487);
			add_location(ul16, file$1, 95, 16, 5482);
			add_location(li37, file$1, 95, 0, 5466);
			attr_dev(a6, "href", "https://github.com/hperrin/svelte-material-ui/blob/v3.0.0/packages/ripple/README.md#default");
			attr_dev(a6, "rel", "nofollow");
			add_location(a6, file$1, 99, 4, 5653);
			add_location(li38, file$1, 99, 0, 5649);
			add_location(ul17, file$1, 98, 10, 5644);
			add_location(li39, file$1, 98, 0, 5634);
			add_location(li40, file$1, 105, 0, 5854);
			add_location(code34, file$1, 106, 53, 6016);
			add_location(li41, file$1, 106, 0, 5963);
			add_location(code35, file$1, 107, 12, 6174);
			add_location(code36, file$1, 107, 45, 6207);
			add_location(li42, file$1, 107, 0, 6162);
			add_location(code37, file$1, 108, 23, 6269);
			add_location(li43, file$1, 108, 0, 6246);
			add_location(code38, file$1, 109, 23, 6374);
			add_location(code39, file$1, 109, 75, 6426);
			add_location(li44, file$1, 109, 0, 6351);
			add_location(ul18, file$1, 104, 10, 5849);
			add_location(li45, file$1, 104, 0, 5839);
			add_location(code40, file$1, 112, 4, 6490);
			add_location(code41, file$1, 112, 48, 6534);
			add_location(li46, file$1, 112, 0, 6486);
			add_location(code42, file$1, 113, 4, 6567);
			add_location(li47, file$1, 113, 0, 6563);
			add_location(ul19, file$1, 111, 10, 6481);
			add_location(li48, file$1, 111, 0, 6471);
			add_location(code43, file$1, 116, 12, 6675);
			add_location(code44, file$1, 116, 36, 6699);
			add_location(li49, file$1, 116, 0, 6663);
			add_location(ul20, file$1, 115, 7, 6658);
			add_location(li50, file$1, 115, 0, 6651);
			add_location(code45, file$1, 119, 12, 6826);
			add_location(code46, file$1, 119, 43, 6857);
			add_location(code47, file$1, 119, 163, 6977);
			add_location(li51, file$1, 119, 0, 6814);
			add_location(ul21, file$1, 118, 10, 6809);
			add_location(li52, file$1, 118, 0, 6799);
			add_location(li53, file$1, 122, 0, 7058);
			add_location(li54, file$1, 123, 0, 7167);
			add_location(code48, file$1, 124, 27, 7340);
			add_location(li55, file$1, 124, 0, 7313);
			add_location(code49, file$1, 125, 12, 7425);
			add_location(code50, file$1, 125, 36, 7449);
			add_location(code51, file$1, 125, 56, 7469);
			add_location(code52, file$1, 125, 90, 7503);
			add_location(li56, file$1, 125, 0, 7413);
			add_location(code53, file$1, 126, 23, 7568);
			add_location(code54, file$1, 126, 55, 7600);
			add_location(li57, file$1, 126, 0, 7545);
			add_location(code55, file$1, 127, 23, 7727);
			add_location(code56, file$1, 127, 78, 7782);
			add_location(li58, file$1, 127, 0, 7704);
			add_location(code57, file$1, 128, 77, 7893);
			add_location(code58, file$1, 128, 97, 7913);
			add_location(code59, file$1, 128, 125, 7941);
			add_location(code60, file$1, 128, 154, 7970);
			add_location(li59, file$1, 128, 0, 7816);
			add_location(ul22, file$1, 121, 13, 7053);
			add_location(li60, file$1, 121, 0, 7040);
			add_location(ul23, file$1, 67, 0, 3670);
			attr_dev(h24, "id", "new-features-1");
			add_location(h24, file$1, 131, 0, 8027);
			attr_dev(h34, "id", "theming-sass-2");
			add_location(h34, file$1, 132, 0, 8070);
			add_location(code61, file$1, 135, 8, 8140);
			add_location(li61, file$1, 135, 0, 8132);
			add_location(ul24, file$1, 134, 9, 8127);
			add_location(li62, file$1, 134, 0, 8118);
			add_location(code62, file$1, 138, 8, 8211);
			add_location(li63, file$1, 138, 0, 8203);
			add_location(ul25, file$1, 137, 10, 8198);
			add_location(li64, file$1, 137, 0, 8188);
			add_location(ul26, file$1, 133, 0, 8113);
			attr_dev(h35, "id", "components-1");
			add_location(h35, file$1, 141, 0, 8258);
			add_location(code63, file$1, 143, 26, 8327);
			add_location(li65, file$1, 143, 0, 8301);
			add_location(strong, file$1, 144, 31, 8442);
			add_location(li66, file$1, 144, 0, 8411);
			add_location(code64, file$1, 145, 74, 8587);
			add_location(li67, file$1, 145, 0, 8513);
			add_location(ul27, file$1, 142, 0, 8296);
			add_location(p8, file$1, 147, 0, 8650);
			add_location(li68, file$1, 149, 0, 8677);
			add_location(li69, file$1, 150, 0, 8694);
			add_location(li70, file$1, 151, 0, 8721);
			add_location(li71, file$1, 152, 0, 8743);
			add_location(li72, file$1, 153, 0, 8770);
			add_location(li73, file$1, 154, 0, 8788);
			add_location(ul28, file$1, 148, 0, 8672);
			add_location(p9, file$1, 156, 0, 8825);
			add_location(code65, file$1, 159, 8, 8895);
			add_location(li74, file$1, 159, 0, 8887);
			add_location(code66, file$1, 160, 8, 8949);
			add_location(li75, file$1, 160, 0, 8941);
			add_location(ul29, file$1, 158, 9, 8882);
			add_location(li76, file$1, 158, 0, 8873);
			add_location(code67, file$1, 163, 21, 9060);
			add_location(li77, file$1, 163, 0, 9039);
			add_location(ul30, file$1, 162, 10, 9034);
			add_location(li78, file$1, 162, 0, 9024);
			add_location(code68, file$1, 166, 8, 9132);
			add_location(li79, file$1, 166, 0, 9124);
			add_location(code69, file$1, 167, 8, 9177);
			add_location(li80, file$1, 167, 0, 9169);
			add_location(code70, file$1, 168, 8, 9256);
			add_location(li81, file$1, 168, 0, 9248);
			add_location(li82, file$1, 169, 0, 9323);
			add_location(li83, file$1, 170, 0, 9343);
			add_location(li84, file$1, 171, 0, 9371);
			add_location(ul31, file$1, 165, 14, 9119);
			add_location(li85, file$1, 165, 0, 9105);
			add_location(code71, file$1, 174, 8, 9434);
			add_location(li86, file$1, 174, 0, 9426);
			add_location(ul32, file$1, 173, 10, 9421);
			add_location(li87, file$1, 173, 0, 9411);
			add_location(code72, file$1, 177, 8, 9502);
			add_location(li88, file$1, 177, 0, 9494);
			add_location(code73, file$1, 178, 8, 9559);
			add_location(li89, file$1, 178, 0, 9551);
			add_location(ul33, file$1, 176, 10, 9489);
			add_location(li90, file$1, 176, 0, 9479);
			add_location(code74, file$1, 181, 8, 9625);
			add_location(li91, file$1, 181, 0, 9617);
			add_location(ul34, file$1, 180, 7, 9612);
			add_location(li92, file$1, 180, 0, 9605);
			add_location(code75, file$1, 184, 8, 9693);
			add_location(li93, file$1, 184, 0, 9685);
			add_location(ul35, file$1, 183, 14, 9680);
			add_location(li94, file$1, 183, 0, 9666);
			add_location(code76, file$1, 187, 8, 9763);
			add_location(code77, file$1, 187, 37, 9792);
			add_location(li95, file$1, 187, 0, 9755);
			add_location(ul36, file$1, 186, 15, 9750);
			add_location(li96, file$1, 186, 0, 9735);
			add_location(code78, file$1, 190, 8, 9881);
			add_location(li97, file$1, 190, 0, 9873);
			add_location(code79, file$1, 191, 8, 9924);
			add_location(li98, file$1, 191, 0, 9916);
			add_location(code80, file$1, 192, 8, 9968);
			add_location(li99, file$1, 192, 0, 9960);
			add_location(ul37, file$1, 189, 8, 9868);
			add_location(li100, file$1, 189, 0, 9860);
			add_location(code81, file$1, 195, 8, 10057);
			add_location(li101, file$1, 195, 0, 10049);
			add_location(code82, file$1, 196, 8, 10099);
			add_location(li102, file$1, 196, 0, 10091);
			add_location(code83, file$1, 197, 8, 10144);
			add_location(li103, file$1, 197, 0, 10136);
			add_location(ul38, file$1, 194, 16, 10044);
			add_location(li104, file$1, 194, 0, 10028);
			add_location(code84, file$1, 200, 8, 10226);
			add_location(li105, file$1, 200, 0, 10218);
			add_location(code85, file$1, 201, 8, 10270);
			add_location(li106, file$1, 201, 0, 10262);
			add_location(ul39, file$1, 199, 10, 10213);
			add_location(li107, file$1, 199, 0, 10203);
			add_location(code86, file$1, 204, 8, 10361);
			add_location(code87, file$1, 204, 28, 10381);
			add_location(code88, file$1, 204, 48, 10401);
			add_location(li108, file$1, 204, 0, 10353);
			add_location(code89, file$1, 205, 8, 10456);
			add_location(li109, file$1, 205, 0, 10448);
			add_location(ul40, file$1, 203, 10, 10348);
			add_location(li110, file$1, 203, 0, 10338);
			add_location(code90, file$1, 208, 8, 10575);
			add_location(li111, file$1, 208, 0, 10567);
			add_location(ul41, file$1, 207, 10, 10562);
			add_location(li112, file$1, 207, 0, 10552);
			add_location(code91, file$1, 211, 8, 10654);
			add_location(code92, file$1, 211, 32, 10678);
			add_location(li113, file$1, 211, 0, 10646);
			add_location(code93, file$1, 212, 8, 10718);
			add_location(li114, file$1, 212, 0, 10710);
			add_location(code94, file$1, 213, 8, 10772);
			add_location(li115, file$1, 213, 0, 10764);
			add_location(code95, file$1, 214, 8, 10867);
			add_location(li116, file$1, 214, 0, 10859);
			add_location(ul42, file$1, 210, 13, 10641);
			add_location(li117, file$1, 210, 0, 10628);
			add_location(code96, file$1, 217, 8, 10973);
			add_location(li118, file$1, 217, 0, 10965);
			add_location(ul43, file$1, 216, 15, 10960);
			add_location(li119, file$1, 216, 0, 10945);
			add_location(ul44, file$1, 157, 0, 8868);
			add_location(p10, file$1, 220, 0, 11027);
			attr_dev(h15, "id", "smui-1---smui-2");
			add_location(h15, file$1, 221, 0, 11123);
			attr_dev(a7, "href", "https://github.com/material-components/material-components-web/blob/master/CHANGELOG.md#400-2019-11-02-1");
			attr_dev(a7, "rel", "nofollow");
			add_location(a7, file$1, 223, 0, 11219);
			add_location(p11, file$1, 222, 0, 11170);
			add_location(li120, file$1, 229, 0, 11486);
			add_location(li121, file$1, 230, 0, 11527);
			add_location(code97, file$1, 231, 28, 11639);
			add_location(li122, file$1, 231, 0, 11611);
			add_location(li123, file$1, 232, 0, 11693);
			add_location(ul45, file$1, 228, 9, 11481);
			add_location(li124, file$1, 228, 0, 11472);
			add_location(li125, file$1, 235, 0, 11813);
			add_location(ul46, file$1, 234, 25, 11808);
			add_location(li126, file$1, 234, 0, 11783);
			add_location(code98, file$1, 238, 4, 11886);
			add_location(li127, file$1, 238, 0, 11882);
			add_location(code99, file$1, 239, 4, 11965);
			add_location(li128, file$1, 239, 0, 11961);
			add_location(code100, file$1, 240, 38, 12100);
			add_location(code101, file$1, 240, 68, 12130);
			add_location(li129, file$1, 240, 0, 12062);
			add_location(ul47, file$1, 237, 10, 11877);
			add_location(li130, file$1, 237, 0, 11867);
			add_location(code102, file$1, 243, 20, 12229);
			add_location(li131, file$1, 243, 0, 12209);
			add_location(ul48, file$1, 242, 10, 12204);
			add_location(li132, file$1, 242, 0, 12194);
			add_location(ul49, file$1, 227, 0, 11467);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h10, anchor);
			append_dev(h10, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p0, anchor);
			append_dev(p0, t2);
			insert_dev(target, t3, anchor);
			insert_dev(target, h11, anchor);
			append_dev(h11, t4);
			insert_dev(target, t5, anchor);
			insert_dev(target, ul1, anchor);
			append_dev(ul1, li1);
			append_dev(li1, t6);
			append_dev(li1, code0);
			append_dev(code0, t7);
			append_dev(li1, t8);
			append_dev(li1, ul0);
			append_dev(ul0, li0);
			append_dev(li0, t9);
			insert_dev(target, t10, anchor);
			insert_dev(target, h12, anchor);
			append_dev(h12, t11);
			insert_dev(target, t12, anchor);
			insert_dev(target, h20, anchor);
			append_dev(h20, t13);
			insert_dev(target, t14, anchor);
			insert_dev(target, p1, anchor);
			append_dev(p1, t15);
			insert_dev(target, t16, anchor);
			insert_dev(target, p2, anchor);
			append_dev(p2, t17);
			append_dev(p2, a0);
			append_dev(a0, t18);
			append_dev(p2, t19);
			insert_dev(target, t20, anchor);
			insert_dev(target, h13, anchor);
			append_dev(h13, t21);
			insert_dev(target, t22, anchor);
			insert_dev(target, p3, anchor);
			append_dev(p3, t23);
			append_dev(p3, a1);
			append_dev(a1, t24);
			insert_dev(target, t25, anchor);
			insert_dev(target, p4, anchor);
			append_dev(p4, t26);
			insert_dev(target, t27, anchor);
			insert_dev(target, h21, anchor);
			append_dev(h21, t28);
			insert_dev(target, t29, anchor);
			insert_dev(target, h30, anchor);
			append_dev(h30, t30);
			insert_dev(target, t31, anchor);
			insert_dev(target, ul2, anchor);
			append_dev(ul2, li2);
			append_dev(li2, t32);
			append_dev(ul2, t33);
			append_dev(ul2, li3);
			append_dev(li3, t34);
			insert_dev(target, t35, anchor);
			insert_dev(target, h22, anchor);
			append_dev(h22, t36);
			insert_dev(target, t37, anchor);
			insert_dev(target, h31, anchor);
			append_dev(h31, t38);
			insert_dev(target, t39, anchor);
			insert_dev(target, ul8, anchor);
			append_dev(ul8, li5);
			append_dev(li5, t40);
			append_dev(li5, ul3);
			append_dev(ul3, li4);
			append_dev(li4, t41);
			append_dev(ul8, t42);
			append_dev(ul8, li8);
			append_dev(li8, t43);
			append_dev(li8, ul4);
			append_dev(ul4, li6);
			append_dev(li6, t44);
			append_dev(li6, code1);
			append_dev(code1, t45);
			append_dev(li6, t46);
			append_dev(ul4, t47);
			append_dev(ul4, li7);
			append_dev(li7, t48);
			append_dev(li7, code2);
			append_dev(code2, t49);
			append_dev(li7, t50);
			append_dev(ul8, t51);
			append_dev(ul8, li11);
			append_dev(li11, t52);
			append_dev(li11, ul5);
			append_dev(ul5, li9);
			append_dev(li9, t53);
			append_dev(li9, code3);
			append_dev(code3, t54);
			append_dev(li9, t55);
			append_dev(ul5, t56);
			append_dev(ul5, li10);
			append_dev(li10, t57);
			append_dev(li10, code4);
			append_dev(code4, t58);
			append_dev(li10, t59);
			append_dev(ul8, t60);
			append_dev(ul8, li13);
			append_dev(li13, t61);
			append_dev(li13, ul6);
			append_dev(ul6, li12);
			append_dev(li12, t62);
			append_dev(li12, code5);
			append_dev(code5, t63);
			append_dev(li12, t64);
			append_dev(ul8, t65);
			append_dev(ul8, li15);
			append_dev(li15, t66);
			append_dev(li15, ul7);
			append_dev(ul7, li14);
			append_dev(li14, t67);
			append_dev(li14, code6);
			append_dev(code6, t68);
			append_dev(li14, t69);
			append_dev(li14, code7);
			append_dev(code7, t70);
			append_dev(li14, t71);
			insert_dev(target, t72, anchor);
			insert_dev(target, h14, anchor);
			append_dev(h14, t73);
			insert_dev(target, t74, anchor);
			insert_dev(target, p5, anchor);
			append_dev(p5, t75);
			append_dev(p5, code8);
			append_dev(code8, t76);
			append_dev(p5, t77);
			insert_dev(target, t78, anchor);
			insert_dev(target, pre, anchor);
			pre.innerHTML = raw_value;
			insert_dev(target, t79, anchor);
			insert_dev(target, p6, anchor);
			append_dev(p6, t80);
			append_dev(p6, a2);
			append_dev(a2, t81);
			insert_dev(target, t82, anchor);
			insert_dev(target, p7, anchor);
			append_dev(p7, t83);
			append_dev(p7, a3);
			append_dev(a3, t84);
			append_dev(p7, t85);
			insert_dev(target, t86, anchor);
			insert_dev(target, h23, anchor);
			append_dev(h23, t87);
			insert_dev(target, t88, anchor);
			insert_dev(target, h32, anchor);
			append_dev(h32, t89);
			insert_dev(target, t90, anchor);
			insert_dev(target, ul9, anchor);
			append_dev(ul9, li16);
			append_dev(li16, t91);
			append_dev(ul9, t92);
			append_dev(ul9, li17);
			append_dev(li17, t93);
			append_dev(li17, a4);
			append_dev(a4, t94);
			append_dev(li17, t95);
			insert_dev(target, t96, anchor);
			insert_dev(target, h33, anchor);
			append_dev(h33, t97);
			insert_dev(target, t98, anchor);
			insert_dev(target, ul23, anchor);
			append_dev(ul23, li23);
			append_dev(li23, t99);
			append_dev(li23, ul10);
			append_dev(ul10, li18);
			append_dev(li18, t100);
			append_dev(li18, code9);
			append_dev(code9, t101);
			append_dev(li18, t102);
			append_dev(li18, code10);
			append_dev(code10, t103);
			append_dev(li18, t104);
			append_dev(ul10, t105);
			append_dev(ul10, li19);
			append_dev(li19, t106);
			append_dev(ul10, t107);
			append_dev(ul10, li20);
			append_dev(li20, t108);
			append_dev(li20, code11);
			append_dev(code11, t109);
			append_dev(li20, t110);
			append_dev(li20, code12);
			append_dev(code12, t111);
			append_dev(li20, t112);
			append_dev(li20, code13);
			append_dev(code13, t113);
			append_dev(li20, t114);
			append_dev(ul10, t115);
			append_dev(ul10, li21);
			append_dev(li21, t116);
			append_dev(li21, code14);
			append_dev(code14, t117);
			append_dev(li21, t118);
			append_dev(ul10, t119);
			append_dev(ul10, li22);
			append_dev(li22, t120);
			append_dev(li22, code15);
			append_dev(code15, t121);
			append_dev(li22, t122);
			append_dev(ul23, t123);
			append_dev(ul23, li25);
			append_dev(li25, t124);
			append_dev(li25, ul11);
			append_dev(ul11, li24);
			append_dev(li24, code16);
			append_dev(code16, t125);
			append_dev(li24, t126);
			append_dev(ul23, t127);
			append_dev(ul23, li29);
			append_dev(li29, t128);
			append_dev(li29, ul12);
			append_dev(ul12, li26);
			append_dev(li26, t129);
			append_dev(li26, code17);
			append_dev(code17, t130);
			append_dev(li26, t131);
			append_dev(li26, code18);
			append_dev(code18, t132);
			append_dev(li26, t133);
			append_dev(li26, code19);
			append_dev(code19, t134);
			append_dev(li26, t135);
			append_dev(li26, code20);
			append_dev(code20, t136);
			append_dev(li26, t137);
			append_dev(li26, code21);
			append_dev(code21, t138);
			append_dev(li26, t139);
			append_dev(ul12, t140);
			append_dev(ul12, li27);
			append_dev(li27, t141);
			append_dev(li27, code22);
			append_dev(code22, t142);
			append_dev(li27, t143);
			append_dev(li27, code23);
			append_dev(code23, t144);
			append_dev(li27, t145);
			append_dev(li27, code24);
			append_dev(code24, t146);
			append_dev(li27, t147);
			append_dev(ul12, t148);
			append_dev(ul12, li28);
			append_dev(li28, t149);
			append_dev(li28, a5);
			append_dev(a5, t150);
			append_dev(li28, t151);
			append_dev(ul23, t152);
			append_dev(ul23, li31);
			append_dev(li31, t153);
			append_dev(li31, ul13);
			append_dev(ul13, li30);
			append_dev(li30, t154);
			append_dev(li30, code25);
			append_dev(code25, t155);
			append_dev(li30, t156);
			append_dev(ul23, t157);
			append_dev(ul23, li33);
			append_dev(li33, t158);
			append_dev(li33, ul14);
			append_dev(ul14, li32);
			append_dev(li32, t159);
			append_dev(li32, code26);
			append_dev(code26, t160);
			append_dev(li32, t161);
			append_dev(ul23, t162);
			append_dev(ul23, li35);
			append_dev(li35, t163);
			append_dev(li35, ul15);
			append_dev(ul15, li34);
			append_dev(li34, code27);
			append_dev(code27, t164);
			append_dev(li34, t165);
			append_dev(li34, code28);
			append_dev(code28, t166);
			append_dev(li34, t167);
			append_dev(li34, code29);
			append_dev(code29, t168);
			append_dev(li34, t169);
			append_dev(li34, code30);
			append_dev(code30, t170);
			append_dev(li34, t171);
			append_dev(ul23, t172);
			append_dev(ul23, li37);
			append_dev(li37, t173);
			append_dev(li37, ul16);
			append_dev(ul16, li36);
			append_dev(li36, t174);
			append_dev(li36, code31);
			append_dev(code31, t175);
			append_dev(li36, t176);
			append_dev(li36, code32);
			append_dev(code32, t177);
			append_dev(li36, t178);
			append_dev(li36, code33);
			append_dev(code33, t179);
			append_dev(li36, t180);
			append_dev(ul23, t181);
			append_dev(ul23, li39);
			append_dev(li39, t182);
			append_dev(li39, ul17);
			append_dev(ul17, li38);
			append_dev(li38, a6);
			append_dev(a6, t183);
			append_dev(li38, t184);
			append_dev(ul23, t185);
			append_dev(ul23, li45);
			append_dev(li45, t186);
			append_dev(li45, ul18);
			append_dev(ul18, li40);
			append_dev(li40, t187);
			append_dev(ul18, t188);
			append_dev(ul18, li41);
			append_dev(li41, t189);
			append_dev(li41, code34);
			append_dev(code34, t190);
			append_dev(li41, t191);
			append_dev(ul18, t192);
			append_dev(ul18, li42);
			append_dev(li42, t193);
			append_dev(li42, code35);
			append_dev(code35, t194);
			append_dev(li42, t195);
			append_dev(li42, code36);
			append_dev(code36, t196);
			append_dev(li42, t197);
			append_dev(ul18, t198);
			append_dev(ul18, li43);
			append_dev(li43, t199);
			append_dev(li43, code37);
			append_dev(code37, t200);
			append_dev(li43, t201);
			append_dev(ul18, t202);
			append_dev(ul18, li44);
			append_dev(li44, t203);
			append_dev(li44, code38);
			append_dev(code38, t204);
			append_dev(li44, t205);
			append_dev(li44, code39);
			append_dev(code39, t206);
			append_dev(li44, t207);
			append_dev(ul23, t208);
			append_dev(ul23, li48);
			append_dev(li48, t209);
			append_dev(li48, ul19);
			append_dev(ul19, li46);
			append_dev(li46, code40);
			append_dev(code40, t210);
			append_dev(li46, t211);
			append_dev(li46, code41);
			append_dev(code41, t212);
			append_dev(li46, t213);
			append_dev(ul19, t214);
			append_dev(ul19, li47);
			append_dev(li47, code42);
			append_dev(code42, t215);
			append_dev(li47, t216);
			append_dev(ul23, t217);
			append_dev(ul23, li50);
			append_dev(li50, t218);
			append_dev(li50, ul20);
			append_dev(ul20, li49);
			append_dev(li49, t219);
			append_dev(li49, code43);
			append_dev(code43, t220);
			append_dev(li49, t221);
			append_dev(li49, code44);
			append_dev(code44, t222);
			append_dev(li49, t223);
			append_dev(ul23, t224);
			append_dev(ul23, li52);
			append_dev(li52, t225);
			append_dev(li52, ul21);
			append_dev(ul21, li51);
			append_dev(li51, t226);
			append_dev(li51, code45);
			append_dev(code45, t227);
			append_dev(li51, t228);
			append_dev(li51, code46);
			append_dev(code46, t229);
			append_dev(li51, t230);
			append_dev(li51, code47);
			append_dev(code47, t231);
			append_dev(li51, t232);
			append_dev(ul23, t233);
			append_dev(ul23, li60);
			append_dev(li60, t234);
			append_dev(li60, ul22);
			append_dev(ul22, li53);
			append_dev(li53, t235);
			append_dev(ul22, t236);
			append_dev(ul22, li54);
			append_dev(li54, t237);
			append_dev(ul22, t238);
			append_dev(ul22, li55);
			append_dev(li55, t239);
			append_dev(li55, code48);
			append_dev(code48, t240);
			append_dev(li55, t241);
			append_dev(ul22, t242);
			append_dev(ul22, li56);
			append_dev(li56, t243);
			append_dev(li56, code49);
			append_dev(code49, t244);
			append_dev(li56, t245);
			append_dev(li56, code50);
			append_dev(code50, t246);
			append_dev(li56, t247);
			append_dev(li56, code51);
			append_dev(code51, t248);
			append_dev(li56, t249);
			append_dev(li56, code52);
			append_dev(code52, t250);
			append_dev(li56, t251);
			append_dev(ul22, t252);
			append_dev(ul22, li57);
			append_dev(li57, t253);
			append_dev(li57, code53);
			append_dev(code53, t254);
			append_dev(li57, t255);
			append_dev(li57, code54);
			append_dev(code54, t256);
			append_dev(li57, t257);
			append_dev(ul22, t258);
			append_dev(ul22, li58);
			append_dev(li58, t259);
			append_dev(li58, code55);
			append_dev(code55, t260);
			append_dev(li58, t261);
			append_dev(li58, code56);
			append_dev(code56, t262);
			append_dev(li58, t263);
			append_dev(ul22, t264);
			append_dev(ul22, li59);
			append_dev(li59, t265);
			append_dev(li59, code57);
			append_dev(code57, t266);
			append_dev(li59, t267);
			append_dev(li59, code58);
			append_dev(code58, t268);
			append_dev(li59, t269);
			append_dev(li59, code59);
			append_dev(code59, t270);
			append_dev(li59, t271);
			append_dev(li59, code60);
			append_dev(code60, t272);
			append_dev(li59, t273);
			insert_dev(target, t274, anchor);
			insert_dev(target, h24, anchor);
			append_dev(h24, t275);
			insert_dev(target, t276, anchor);
			insert_dev(target, h34, anchor);
			append_dev(h34, t277);
			insert_dev(target, t278, anchor);
			insert_dev(target, ul26, anchor);
			append_dev(ul26, li62);
			append_dev(li62, t279);
			append_dev(li62, ul24);
			append_dev(ul24, li61);
			append_dev(li61, t280);
			append_dev(li61, code61);
			append_dev(code61, t281);
			append_dev(li61, t282);
			append_dev(ul26, t283);
			append_dev(ul26, li64);
			append_dev(li64, t284);
			append_dev(li64, ul25);
			append_dev(ul25, li63);
			append_dev(li63, t285);
			append_dev(li63, code62);
			append_dev(code62, t286);
			append_dev(li63, t287);
			insert_dev(target, t288, anchor);
			insert_dev(target, h35, anchor);
			append_dev(h35, t289);
			insert_dev(target, t290, anchor);
			insert_dev(target, ul27, anchor);
			append_dev(ul27, li65);
			append_dev(li65, t291);
			append_dev(li65, code63);
			append_dev(code63, t292);
			append_dev(li65, t293);
			append_dev(ul27, t294);
			append_dev(ul27, li66);
			append_dev(li66, t295);
			append_dev(li66, strong);
			append_dev(strong, t296);
			append_dev(li66, t297);
			append_dev(ul27, t298);
			append_dev(ul27, li67);
			append_dev(li67, t299);
			append_dev(li67, code64);
			append_dev(code64, t300);
			append_dev(li67, t301);
			insert_dev(target, t302, anchor);
			insert_dev(target, p8, anchor);
			append_dev(p8, t303);
			insert_dev(target, t304, anchor);
			insert_dev(target, ul28, anchor);
			append_dev(ul28, li68);
			append_dev(li68, t305);
			append_dev(ul28, t306);
			append_dev(ul28, li69);
			append_dev(li69, t307);
			append_dev(ul28, t308);
			append_dev(ul28, li70);
			append_dev(li70, t309);
			append_dev(ul28, t310);
			append_dev(ul28, li71);
			append_dev(li71, t311);
			append_dev(ul28, t312);
			append_dev(ul28, li72);
			append_dev(li72, t313);
			append_dev(ul28, t314);
			append_dev(ul28, li73);
			append_dev(li73, t315);
			insert_dev(target, t316, anchor);
			insert_dev(target, p9, anchor);
			append_dev(p9, t317);
			insert_dev(target, t318, anchor);
			insert_dev(target, ul44, anchor);
			append_dev(ul44, li76);
			append_dev(li76, t319);
			append_dev(li76, ul29);
			append_dev(ul29, li74);
			append_dev(li74, t320);
			append_dev(li74, code65);
			append_dev(code65, t321);
			append_dev(li74, t322);
			append_dev(ul29, t323);
			append_dev(ul29, li75);
			append_dev(li75, t324);
			append_dev(li75, code66);
			append_dev(code66, t325);
			append_dev(li75, t326);
			append_dev(ul44, t327);
			append_dev(ul44, li78);
			append_dev(li78, t328);
			append_dev(li78, ul30);
			append_dev(ul30, li77);
			append_dev(li77, t329);
			append_dev(li77, code67);
			append_dev(code67, t330);
			append_dev(li77, t331);
			append_dev(ul44, t332);
			append_dev(ul44, li85);
			append_dev(li85, t333);
			append_dev(li85, ul31);
			append_dev(ul31, li79);
			append_dev(li79, t334);
			append_dev(li79, code68);
			append_dev(code68, t335);
			append_dev(li79, t336);
			append_dev(ul31, t337);
			append_dev(ul31, li80);
			append_dev(li80, t338);
			append_dev(li80, code69);
			append_dev(code69, t339);
			append_dev(li80, t340);
			append_dev(ul31, t341);
			append_dev(ul31, li81);
			append_dev(li81, t342);
			append_dev(li81, code70);
			append_dev(code70, t343);
			append_dev(li81, t344);
			append_dev(ul31, t345);
			append_dev(ul31, li82);
			append_dev(li82, t346);
			append_dev(ul31, t347);
			append_dev(ul31, li83);
			append_dev(li83, t348);
			append_dev(ul31, t349);
			append_dev(ul31, li84);
			append_dev(li84, t350);
			append_dev(ul44, t351);
			append_dev(ul44, li87);
			append_dev(li87, t352);
			append_dev(li87, ul32);
			append_dev(ul32, li86);
			append_dev(li86, t353);
			append_dev(li86, code71);
			append_dev(code71, t354);
			append_dev(li86, t355);
			append_dev(ul44, t356);
			append_dev(ul44, li90);
			append_dev(li90, t357);
			append_dev(li90, ul33);
			append_dev(ul33, li88);
			append_dev(li88, t358);
			append_dev(li88, code72);
			append_dev(code72, t359);
			append_dev(li88, t360);
			append_dev(ul33, t361);
			append_dev(ul33, li89);
			append_dev(li89, t362);
			append_dev(li89, code73);
			append_dev(code73, t363);
			append_dev(li89, t364);
			append_dev(ul44, t365);
			append_dev(ul44, li92);
			append_dev(li92, t366);
			append_dev(li92, ul34);
			append_dev(ul34, li91);
			append_dev(li91, t367);
			append_dev(li91, code74);
			append_dev(code74, t368);
			append_dev(li91, t369);
			append_dev(ul44, t370);
			append_dev(ul44, li94);
			append_dev(li94, t371);
			append_dev(li94, ul35);
			append_dev(ul35, li93);
			append_dev(li93, t372);
			append_dev(li93, code75);
			append_dev(code75, t373);
			append_dev(li93, t374);
			append_dev(ul44, t375);
			append_dev(ul44, li96);
			append_dev(li96, t376);
			append_dev(li96, ul36);
			append_dev(ul36, li95);
			append_dev(li95, t377);
			append_dev(li95, code76);
			append_dev(code76, t378);
			append_dev(li95, t379);
			append_dev(li95, code77);
			append_dev(code77, t380);
			append_dev(li95, t381);
			append_dev(ul44, t382);
			append_dev(ul44, li100);
			append_dev(li100, t383);
			append_dev(li100, ul37);
			append_dev(ul37, li97);
			append_dev(li97, t384);
			append_dev(li97, code78);
			append_dev(code78, t385);
			append_dev(li97, t386);
			append_dev(ul37, t387);
			append_dev(ul37, li98);
			append_dev(li98, t388);
			append_dev(li98, code79);
			append_dev(code79, t389);
			append_dev(li98, t390);
			append_dev(ul37, t391);
			append_dev(ul37, li99);
			append_dev(li99, t392);
			append_dev(li99, code80);
			append_dev(code80, t393);
			append_dev(li99, t394);
			append_dev(ul44, t395);
			append_dev(ul44, li104);
			append_dev(li104, t396);
			append_dev(li104, ul38);
			append_dev(ul38, li101);
			append_dev(li101, t397);
			append_dev(li101, code81);
			append_dev(code81, t398);
			append_dev(li101, t399);
			append_dev(ul38, t400);
			append_dev(ul38, li102);
			append_dev(li102, t401);
			append_dev(li102, code82);
			append_dev(code82, t402);
			append_dev(li102, t403);
			append_dev(ul38, t404);
			append_dev(ul38, li103);
			append_dev(li103, t405);
			append_dev(li103, code83);
			append_dev(code83, t406);
			append_dev(li103, t407);
			append_dev(ul44, t408);
			append_dev(ul44, li107);
			append_dev(li107, t409);
			append_dev(li107, ul39);
			append_dev(ul39, li105);
			append_dev(li105, t410);
			append_dev(li105, code84);
			append_dev(code84, t411);
			append_dev(li105, t412);
			append_dev(ul39, t413);
			append_dev(ul39, li106);
			append_dev(li106, t414);
			append_dev(li106, code85);
			append_dev(code85, t415);
			append_dev(li106, t416);
			append_dev(ul44, t417);
			append_dev(ul44, li110);
			append_dev(li110, t418);
			append_dev(li110, ul40);
			append_dev(ul40, li108);
			append_dev(li108, t419);
			append_dev(li108, code86);
			append_dev(code86, t420);
			append_dev(li108, t421);
			append_dev(li108, code87);
			append_dev(code87, t422);
			append_dev(li108, t423);
			append_dev(li108, code88);
			append_dev(code88, t424);
			append_dev(li108, t425);
			append_dev(ul40, t426);
			append_dev(ul40, li109);
			append_dev(li109, t427);
			append_dev(li109, code89);
			append_dev(code89, t428);
			append_dev(li109, t429);
			append_dev(ul44, t430);
			append_dev(ul44, li112);
			append_dev(li112, t431);
			append_dev(li112, ul41);
			append_dev(ul41, li111);
			append_dev(li111, t432);
			append_dev(li111, code90);
			append_dev(code90, t433);
			append_dev(li111, t434);
			append_dev(ul44, t435);
			append_dev(ul44, li117);
			append_dev(li117, t436);
			append_dev(li117, ul42);
			append_dev(ul42, li113);
			append_dev(li113, t437);
			append_dev(li113, code91);
			append_dev(code91, t438);
			append_dev(li113, t439);
			append_dev(li113, code92);
			append_dev(code92, t440);
			append_dev(li113, t441);
			append_dev(ul42, t442);
			append_dev(ul42, li114);
			append_dev(li114, t443);
			append_dev(li114, code93);
			append_dev(code93, t444);
			append_dev(li114, t445);
			append_dev(ul42, t446);
			append_dev(ul42, li115);
			append_dev(li115, t447);
			append_dev(li115, code94);
			append_dev(code94, t448);
			append_dev(li115, t449);
			append_dev(ul42, t450);
			append_dev(ul42, li116);
			append_dev(li116, t451);
			append_dev(li116, code95);
			append_dev(code95, t452);
			append_dev(li116, t453);
			append_dev(ul44, t454);
			append_dev(ul44, li119);
			append_dev(li119, t455);
			append_dev(li119, ul43);
			append_dev(ul43, li118);
			append_dev(li118, t456);
			append_dev(li118, code96);
			append_dev(code96, t457);
			append_dev(li118, t458);
			insert_dev(target, t459, anchor);
			insert_dev(target, p10, anchor);
			append_dev(p10, t460);
			insert_dev(target, t461, anchor);
			insert_dev(target, h15, anchor);
			append_dev(h15, t462);
			insert_dev(target, t463, anchor);
			insert_dev(target, p11, anchor);
			append_dev(p11, t464);
			append_dev(p11, a7);
			append_dev(a7, t465);
			insert_dev(target, t466, anchor);
			insert_dev(target, ul49, anchor);
			append_dev(ul49, li124);
			append_dev(li124, t467);
			append_dev(li124, ul45);
			append_dev(ul45, li120);
			append_dev(li120, t468);
			append_dev(ul45, t469);
			append_dev(ul45, li121);
			append_dev(li121, t470);
			append_dev(ul45, t471);
			append_dev(ul45, li122);
			append_dev(li122, t472);
			append_dev(li122, code97);
			append_dev(code97, t473);
			append_dev(li122, t474);
			append_dev(ul45, t475);
			append_dev(ul45, li123);
			append_dev(li123, t476);
			append_dev(ul49, t477);
			append_dev(ul49, li126);
			append_dev(li126, t478);
			append_dev(li126, ul46);
			append_dev(ul46, li125);
			append_dev(li125, t479);
			append_dev(ul49, t480);
			append_dev(ul49, li130);
			append_dev(li130, t481);
			append_dev(li130, ul47);
			append_dev(ul47, li127);
			append_dev(li127, code98);
			append_dev(code98, t482);
			append_dev(li127, t483);
			append_dev(ul47, t484);
			append_dev(ul47, li128);
			append_dev(li128, code99);
			append_dev(code99, t485);
			append_dev(li128, t486);
			append_dev(ul47, t487);
			append_dev(ul47, li129);
			append_dev(li129, t488);
			append_dev(li129, code100);
			append_dev(code100, t489);
			append_dev(li129, t490);
			append_dev(li129, code101);
			append_dev(code101, t491);
			append_dev(li129, t492);
			append_dev(ul49, t493);
			append_dev(ul49, li132);
			append_dev(li132, t494);
			append_dev(li132, ul48);
			append_dev(ul48, li131);
			append_dev(li131, t495);
			append_dev(li131, code102);
			append_dev(code102, t496);
			append_dev(li131, t497);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(h10);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(h11);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(ul1);
			if (detaching) detach_dev(t10);
			if (detaching) detach_dev(h12);
			if (detaching) detach_dev(t12);
			if (detaching) detach_dev(h20);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(p1);
			if (detaching) detach_dev(t16);
			if (detaching) detach_dev(p2);
			if (detaching) detach_dev(t20);
			if (detaching) detach_dev(h13);
			if (detaching) detach_dev(t22);
			if (detaching) detach_dev(p3);
			if (detaching) detach_dev(t25);
			if (detaching) detach_dev(p4);
			if (detaching) detach_dev(t27);
			if (detaching) detach_dev(h21);
			if (detaching) detach_dev(t29);
			if (detaching) detach_dev(h30);
			if (detaching) detach_dev(t31);
			if (detaching) detach_dev(ul2);
			if (detaching) detach_dev(t35);
			if (detaching) detach_dev(h22);
			if (detaching) detach_dev(t37);
			if (detaching) detach_dev(h31);
			if (detaching) detach_dev(t39);
			if (detaching) detach_dev(ul8);
			if (detaching) detach_dev(t72);
			if (detaching) detach_dev(h14);
			if (detaching) detach_dev(t74);
			if (detaching) detach_dev(p5);
			if (detaching) detach_dev(t78);
			if (detaching) detach_dev(pre);
			if (detaching) detach_dev(t79);
			if (detaching) detach_dev(p6);
			if (detaching) detach_dev(t82);
			if (detaching) detach_dev(p7);
			if (detaching) detach_dev(t86);
			if (detaching) detach_dev(h23);
			if (detaching) detach_dev(t88);
			if (detaching) detach_dev(h32);
			if (detaching) detach_dev(t90);
			if (detaching) detach_dev(ul9);
			if (detaching) detach_dev(t96);
			if (detaching) detach_dev(h33);
			if (detaching) detach_dev(t98);
			if (detaching) detach_dev(ul23);
			if (detaching) detach_dev(t274);
			if (detaching) detach_dev(h24);
			if (detaching) detach_dev(t276);
			if (detaching) detach_dev(h34);
			if (detaching) detach_dev(t278);
			if (detaching) detach_dev(ul26);
			if (detaching) detach_dev(t288);
			if (detaching) detach_dev(h35);
			if (detaching) detach_dev(t290);
			if (detaching) detach_dev(ul27);
			if (detaching) detach_dev(t302);
			if (detaching) detach_dev(p8);
			if (detaching) detach_dev(t304);
			if (detaching) detach_dev(ul28);
			if (detaching) detach_dev(t316);
			if (detaching) detach_dev(p9);
			if (detaching) detach_dev(t318);
			if (detaching) detach_dev(ul44);
			if (detaching) detach_dev(t459);
			if (detaching) detach_dev(p10);
			if (detaching) detach_dev(t461);
			if (detaching) detach_dev(h15);
			if (detaching) detach_dev(t463);
			if (detaching) detach_dev(p11);
			if (detaching) detach_dev(t466);
			if (detaching) detach_dev(ul49);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("MIGRATING", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<MIGRATING> was created with unknown prop '${key}'`);
	});

	return [];
}

class MIGRATING extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MIGRATING",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src/routes/MIGRATING.md.svelte generated by Svelte v3.37.0 */
const file = "src/routes/MIGRATING.md.svelte";

function create_fragment(ctx) {
	let t;
	let section;
	let migrating;
	let current;
	migrating = new MIGRATING({ $$inline: true });

	const block = {
		c: function create() {
			t = space();
			section = element("section");
			create_component(migrating.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1myc4ha\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			claim_component(migrating.$$.fragment, section_nodes);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Migrating - SMUI";
			attr_dev(section, "class", "markdown");
			add_location(section, file, 4, 0, 64);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			insert_dev(target, section, anchor);
			mount_component(migrating, section, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(migrating.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(migrating.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if (detaching) detach_dev(section);
			destroy_component(migrating);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("MIGRATING_md", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<MIGRATING_md> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ Migrating: MIGRATING });
	return [];
}

class MIGRATING_md extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MIGRATING_md",
			options,
			id: create_fragment.name
		});
	}
}

export default MIGRATING_md;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTUlHUkFUSU5HLm1kLmQ5N2Y2M2RkLmpzIiwic291cmNlcyI6W10sInNvdXJjZXNDb250ZW50IjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
