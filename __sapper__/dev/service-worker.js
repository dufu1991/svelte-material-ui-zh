(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1622519031447;

	const files = [
		"/service-worker-index.html",
		"/CNAME",
		"/browserconfig.xml",
		"/header-dark.png",
		"/header-light.png",
		"/header-transparent.png",
		"/header.png",
		"/icons/android-icon-144x144.png",
		"/icons/android-icon-192x192.png",
		"/icons/android-icon-36x36.png",
		"/icons/android-icon-48x48.png",
		"/icons/android-icon-72x72.png",
		"/icons/android-icon-96x96.png",
		"/icons/apple-icon-114x114.png",
		"/icons/apple-icon-120x120.png",
		"/icons/apple-icon-144x144.png",
		"/icons/apple-icon-152x152.png",
		"/icons/apple-icon-180x180.png",
		"/icons/apple-icon-57x57.png",
		"/icons/apple-icon-60x60.png",
		"/icons/apple-icon-72x72.png",
		"/icons/apple-icon-76x76.png",
		"/icons/apple-icon-precomposed.png",
		"/icons/apple-icon.png",
		"/icons/favicon-16x16.png",
		"/icons/favicon-32x32.png",
		"/icons/favicon-96x96.png",
		"/icons/favicon.ico",
		"/icons/ms-icon-144x144.png",
		"/icons/ms-icon-150x150.png",
		"/icons/ms-icon-310x310.png",
		"/icons/ms-icon-70x70.png",
		"/logo-bold-dark.png",
		"/logo-bold-dark.svg",
		"/logo-text.png",
		"/logo-text.svg",
		"/logo.png",
		"/logo.svg",
		"/manifest.json",
		"/page-content.jpg",
		"/site-dark.css",
		"/site.css",
		"/smui-dark.css",
		"/smui.css"
	];

	const shell = [
		"/client/client.ec94238b.js",
		"/client/inject_styles.5607aec6.js",
		"/client/index.0c8b64d9.js",
		"/client/Subtitle.1be01128.js",
		"/client/Graphic.805b8c09.js",
		"/client/MIGRATING.md.d97f63dd.js",
		"/client/SVELTEKIT.md.82d4757e.js",
		"/client/INSTALL.md.0544b5fd.js",
		"/client/THEMING.md.de931edc.js",
		"/client/SAPPER.md.dd2ed520.js",
		"/client/REPL.md.1fc7e0c5.js",
		"/client/SASS.md.f8e7c2d9.js",
		"/client/index.31699007.js",
		"/client/Demo.9c515360.js",
		"/client/Checkbox.52871e38.js",
		"/client/FormField.2971fa15.js",
		"/client/Button.d66ce348.js",
		"/client/index.b8a30875.js",
		"/client/CommonLabel.e3297b41.js",
		"/client/Wrapper.fc581bd8.js",
		"/client/index.3a189a01.js",
		"/client/LinearProgress.2a923d82.js",
		"/client/index.04d05664.js",
		"/client/Textfield.38e6e4ee.js",
		"/client/Anchor.88237b9f.js",
		"/client/Supporting.a874223d.js",
		"/client/index.1fa6f4f5.js",
		"/client/Fab.5ce9de7b.js",
		"/client/Text.abd87972.js",
		"/client/Radio.52add3e3.js",
		"/client/index.ce540ab1.js",
		"/client/CommonLabel.6290f478.js",
		"/client/index.210d4c6c.js",
		"/client/index.ab594d40.js",
		"/client/LoremIpsum.116fcbde.js",
		"/client/iframe.33ce86be.js",
		"/client/index.2d03be52.js",
		"/client/Cell.e79ca75d.js",
		"/client/Option.2399e112.js",
		"/client/iframe.0d085591.js",
		"/client/index.0a699421.js",
		"/client/Switch.f22d860f.js",
		"/client/index.10579113.js",
		"/client/Div.92a8773b.js",
		"/client/index.42d9a733.js",
		"/client/index.548bd468.js",
		"/client/index.da3f3c2f.js",
		"/client/index.8bd362c8.js",
		"/client/index.a1b3634d.js",
		"/client/index.cbf364df.js",
		"/client/index.65e51aed.js",
		"/client/index.26b70c32.js",
		"/client/SelectionGroupIcon.cb410e51.js",
		"/client/index.4ed6324f.js",
		"/client/index.689b9ba3.js",
		"/client/Slider.91ac28a7.js",
		"/client/index.1aa9abc4.js",
		"/client/index.4070fb78.js",
		"/client/Ripple.3a4e2bc3.js",
		"/client/index.a3f4ca44.js",
		"/client/index.bd802b4e.js",
		"/client/index.2a1e70d8.js",
		"/client/index.ae9c20e3.js",
		"/client/index.eb1f41c9.js",
		"/client/index.86df3ee9.js",
		"/client/index.60f0ccc8.js",
		"/client/index.732a1838.js",
		"/client/index.43a62ec4.js",
		"/client/index.74b555df.js",
		"/client/index.0725d84f.js",
		"/client/sapper-dev-client.1e7a4a5e.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const staticAssets = new Set(to_cache);

	self.addEventListener('install', (event) => {
	  event.waitUntil(
	    caches
	      .open(ASSETS)
	      .then((cache) => cache.addAll(to_cache))
	      .then(() => {
	        self.skipWaiting();
	      })
	  );
	});

	self.addEventListener('activate', (event) => {
	  event.waitUntil(
	    caches.keys().then(async (keys) => {
	      // delete old caches
	      for (const key of keys) {
	        if (key !== ASSETS) await caches.delete(key);
	      }

	      self.clients.claim();
	    })
	  );
	});

	/**
	 * Fetch the asset from the network and store it in the cache.
	 * Fall back to the cache if the user is offline.
	 */
	async function fetchAndCache(request) {
	  const cache = await caches.open(`offline${timestamp}`);

	  try {
	    const response = await fetch(request);
	    cache.put(request, response.clone());
	    return response;
	  } catch (err) {
	    const response = await cache.match(request);
	    if (response) return response;

	    throw err;
	  }
	}

	self.addEventListener('fetch', (event) => {
	  if (event.request.method !== 'GET' || event.request.headers.has('range'))
	    return;

	  const url = new URL(event.request.url);

	  // don't try to handle e.g. data: URIs
	  const isHttp = url.protocol.startsWith('http');
	  const isDevServerRequest =
	    url.hostname === self.location.hostname && url.port !== self.location.port;
	  const isStaticAsset =
	    url.host === self.location.host && staticAssets.has(url.pathname);
	  const skipBecauseUncached =
	    event.request.cache === 'only-if-cached' && !isStaticAsset;

	  if (isHttp && !isDevServerRequest && !skipBecauseUncached) {
	    event.respondWith(
	      (async () => {
	        // always serve static files and bundler-generated assets from cache.
	        // if your application has other URLs with data that will never change,
	        // set this variable to true for them and they will only be fetched once.
	        const cachedAsset =
	          isStaticAsset && (await caches.match(event.request));

	        // for pages, you might want to serve a shell `service-worker-index.html` file,
	        // which Sapper has generated for you. It's not right for every
	        // app, but if it's right for yours then uncomment this section
	        /*
	        if (!cachedAsset && url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
	          return caches.match('/service-worker-index.html');
	        }
	        */

	        return cachedAsset || fetchAndCache(event.request);
	      })()
	    );
	  }
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
